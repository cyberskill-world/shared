function n(n){"@swc/helpers - typeof";return n&&typeof Symbol!=="undefined"&&n.constructor===Symbol?"symbol":typeof n}var e=Object.defineProperty;var r=function(n,r){return e(n,"name",{value:r,configurable:!0})};import*as t from"node:fs";function i(){for(var n=arguments.length,e=new Array(n),r=0;r<n;r++){e[r]=arguments[r]}return e.every(function(n){return t.existsSync(n)})}r(i,"existsSync");function o(e,r){var i=t.readFileSync(e,"utf-8");if(r===null||r===void 0?void 0:r.asJson)try{var o=JSON.parse(i);if((typeof o==="undefined"?"undefined":n(o))=="object"&&o!==null)return o;throw new Error("Parsed JSON is not an object or array")}catch(n){throw new Error("Failed to parse JSON from file: ".concat(e))}return i}r(o,"readFileSync");function c(e,r){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};var o=i.isJson,c=o===void 0?!1:o,f=c&&(typeof r==="undefined"?"undefined":n(r))=="object"?JSON.stringify(r,null,4):String(r);t.writeFileSync(e,f,"utf-8")}r(c,"writeFileSync");function f(e,r){var i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};var o=i.isJson,c=o===void 0?!1:o,f=c&&(typeof r==="undefined"?"undefined":n(r))=="object"?JSON.stringify(r,null,4):String(r);t.appendFileSync(e,f,"utf-8")}r(f,"appendFileSync");function a(){for(var n=arguments.length,e=new Array(n),r=0;r<n;r++){e[r]=arguments[r]}e.forEach(function(n){i(n)&&t.rmSync(n,{recursive:!0,force:!0})})}r(a,"rmSync");export{f as appendFileSync,i as existsSync,o as readFileSync,a as rmSync,c as writeFileSync};