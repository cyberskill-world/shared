function n(n){"@swc/helpers - typeof";return n&&typeof Symbol!=="undefined"&&n.constructor===Symbol?"symbol":typeof n}import*as e from"node:fs";var r=function(n){return e.existsSync(n)};function i(r,i){var o=e.readFileSync(r,"utf-8");if(i===null||i===void 0?void 0:i.asJson)try{var t=JSON.parse(o);if((typeof t==="undefined"?"undefined":n(t))=="object"&&t!==null)return t;throw new Error("Parsed JSON is not an object or array")}catch(n){throw new Error("Failed to parse JSON from file: ".concat(r))}return o}function o(r,i){var o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};var t=o.isJson,f=t===void 0?!1:t,c=f&&(typeof i==="undefined"?"undefined":n(i))=="object"?JSON.stringify(i,null,4):String(i);e.writeFileSync(r,c,"utf-8")}function t(r,i){var o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};var t=o.isJson,f=t===void 0?!1:t,c=f&&(typeof i==="undefined"?"undefined":n(i))=="object"?JSON.stringify(i,null,4):String(i);e.appendFileSync(r,c,"utf-8")}function f(n){n.forEach(function(n){r(n)&&e.rmSync(n,{recursive:!0,force:!0})})}export{t as appendFileSync,r as existsSync,i as readFileSync,f as rmSync,o as writeFileSync};