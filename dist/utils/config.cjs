"use strict";function r(r,e){if(e==null||e>r.length)e=r.length;for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}function e(e){if(Array.isArray(e))return r(e)}function t(r){if(typeof Symbol!=="undefined"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function n(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(r){return e(r)||t(r)||a(r)||n()}function u(r){"@swc/helpers - typeof";return r&&typeof Symbol!=="undefined"&&r.constructor===Symbol?"symbol":typeof r}function a(e,t){if(!e)return;if(typeof e==="string")return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n==="Object"&&e.constructor)n=e.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var c=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var l=function(r,e){for(var t in e)i(r,t,{get:e[t],enumerable:!0})},d=function(r,e,t,n){var o=true,a=false,l=undefined;if(e&&(typeof e==="undefined"?"undefined":u(e))=="object"||typeof e=="function")try{var d=function(){var o=s.value;!y.call(r,o)&&o!==t&&i(r,o,{get:function(){return e[o]},enumerable:!(n=f(e,o))||n.enumerable})};for(var p=c(e)[Symbol.iterator](),s;!(o=(s=p.next()).done);o=true)d()}catch(r){a=true;l=r}finally{try{if(!o&&p.return!=null){p.return()}}finally{if(a){throw l}}}return r};var p=function(r){return d(i({},"__esModule",{value:!0}),r)};var s={};l(s,{deepMerge:function(){return b}});module.exports=p(s);function b(){for(var r=arguments.length,e=new Array(r),t=0;t<r;t++){e[t]=arguments[t]}var n=function(r,e){return Object.keys(e).forEach(function(t){var a=e[t],i=r[t];Array.isArray(a)?r[t]=o(new Set(o(Array.isArray(i)?i:[]).concat(o(a)))):(typeof a==="undefined"?"undefined":u(a))=="object"&&a!==null&&!Array.isArray(a)?r[t]=n((typeof i==="undefined"?"undefined":u(i))=="object"&&!Array.isArray(i)?i:{},a):r[t]=a}),r};return e.flatMap(function(r){return Array.isArray(r)?r:[r]}).reduce(function(r,e){return n(r,e)},{})}0&&(module.exports={deepMerge:deepMerge});