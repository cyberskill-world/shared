function r(r,t){if(t==null||t>r.length)t=r.length;for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function t(r){if(Array.isArray(r))return r}function e(t){if(Array.isArray(t))return r(t)}function n(r){if(typeof Symbol!=="undefined"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function o(r,t){var e=r==null?null:typeof Symbol!=="undefined"&&r[Symbol.iterator]||r["@@iterator"];if(e==null)return;var n=[];var o=true;var a=false;var u,i;try{for(e=e.call(r);!(o=(u=e.next()).done);o=true){n.push(u.value);if(t&&n.length===t)break}}catch(r){a=true;i=r}finally{try{if(!o&&e["return"]!=null)e["return"]()}finally{if(a)throw i}}return n}function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function u(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(r,e){return t(r)||o(r,e)||y(r,e)||a()}function f(r){return e(r)||n(r)||y(r)||u()}function l(r){"@swc/helpers - typeof";return r&&typeof Symbol!=="undefined"&&r.constructor===Symbol?"symbol":typeof r}function y(t,e){if(!t)return;if(typeof t==="string")return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor)n=t.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}function c(r){try{return JSON.parse(r),!0}catch(r){return!1}}function s(r){return!!r&&(typeof r==="undefined"?"undefined":l(r))=="object"&&!Array.isArray(r)}function d(){for(var r=arguments.length,t=new Array(r),e=0;e<r;e++){t[e]=arguments[e]}return t.flat().reduce(function(r,t){var e=true,n=false,o=undefined;try{for(var a=Object.entries(t)[Symbol.iterator](),u;!(e=(u=a.next()).done);e=true){var l=i(u.value,2),y=l[0],c=l[1];var b=r[y];Array.isArray(c)?r[y]=Array.from(new Set(f(Array.isArray(b)?b:[]).concat(f(c)))):s(c)?r[y]=d(s(b)?b:{},c):r[y]=c}}catch(r){n=true;o=r}finally{try{if(!e&&a.return!=null){a.return()}}finally{if(n){throw o}}}return r},{})}export{d as deepMerge,c as isJson,s as isPlainObject};