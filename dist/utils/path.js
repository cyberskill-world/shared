function t(t,o){if(o==null||o>t.length)o=t.length;for(var n=0,r=new Array(o);n<o;n++)r[n]=t[n];return r}function o(o){if(Array.isArray(o))return t(o)}function n(t){if(typeof Symbol!=="undefined"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function r(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function c(t){return o(t)||n(t)||e(t)||r()}function e(o,n){if(!o)return;if(typeof o==="string")return t(o,n);var r=Object.prototype.toString.call(o).slice(8,-1);if(r==="Object"&&o.constructor)r=o.constructor.name;if(r==="Map"||r==="Set")return Array.from(r);if(r==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return t(o,n)}import*as a from"node:path";import i from"node:process";import s from"boxen";import I from"chalk";import{exec as l}from"node:child_process";import _ from"node:process";import*as T from"node:util";import f from"node-fetch";import E from"node-persist";var m=24*60*60*1e3;var p=_.env.DEBUG==="true",O=T.promisify(l),S=I.gray,C=I.blue;function u(t){return{raw:!0,cmd:t}}var N=i.env.INIT_CWD||i.cwd(),L="@cyberskill/shared";var g="node_modules",d="dist",G="package.json",v="package-lock.json",y="tsconfig.json",A=".gitignore",M=".simple-git-hooks.json",R="pnpm-lock.yaml",h=".git/hooks/",K=".git/COMMIT_EDITMSG",D=tc(N,g,L,d);var P="eslint",b="vitest",Y="vitest",j="@commitlint/cli",F="commitlint",k="lint-staged",B="lint-staged",U="tsc",w="tsc";var H="git",x="pnpm",W="pnpm exec",J="simple-git-hooks",X="simple-git-hooks",$="@eslint/config-inspector",q="eslint-config-inspector",z="node-modules-inspector",Q="node-modules-inspector",V={CYBERSKILL_DIRECTORY:D,WORKING_DIRECTORY:N,TS_CONFIG:tn(y),GIT_IGNORE:tn(A),GIT_HOOK:tn(h),GIT_COMMIT_MSG:tn(K),SIMPLE_GIT_HOOKS_JSON:tn(M),PACKAGE_JSON:tn(G),PACKAGE_LOCK_JSON:tn(v),PNPM_LOCK_YAML:tn(R),NODE_MODULES:tn(g),CYBERSKILL:{LINT_STAGED_CONFIG:tn("".concat(D,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:tn("".concat(D,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:tn("".concat(D,"/configs/vitest/react/unit.js")),E2E_TEST_CONFIG:tn("".concat(D,"/configs/vitest/react/e2e.js"))}};function Z(t,o){return u("".concat(x," add -D ").concat(t," && ").concat(W," ").concat(o))}function tt(t){var o=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"";return u("".concat(W," ").concat(t," ").concat(o).trim())}var to={SIMPLE_GIT_HOOKS:Z(J,X),ESLINT_INSPECT:Z($,q),NODE_MODULES_INSPECT:Z(z,Q),ESLINT_CHECK:tt(P,V.WORKING_DIRECTORY),ESLINT_FIX:tt(P,"".concat(V.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:Z(U,"".concat(w," -p ").concat(V.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:u("".concat(H," config core.hooksPath ").concat(V.GIT_HOOK)),BUILD:u("".concat(x," run build")),STAGE_BUILD_DIRECTORY:u("".concat(H," add ").concat(d)),PNPM_INSTALL_STANDARD:u("".concat(x," install")),PNPM_INSTALL_LEGACY:u("".concat(x," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:u("".concat(x," install --force")),CYBERSKILL:{TEST_UNIT:Z(b,"".concat(Y," --config ").concat(V.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:Z(b,"".concat(Y," --config ").concat(V.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:Z(j,"".concat(F," --edit ").concat(V.GIT_COMMIT_MSG," --config ").concat(V.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:Z(k,"".concat(B," --config ").concat(V.CYBERSKILL.LINT_STAGED_CONFIG))}};function tn(){for(var t=arguments.length,o=new Array(t),n=0;n<t;n++){o[n]=arguments[n]}var r;return(r=a).resolve.apply(r,[N].concat(c(o)))}function tr(){for(var t=arguments.length,o=new Array(t),n=0;n<t;n++){o[n]=arguments[n]}var r;return(r=a).resolve.apply(r,c(o))}function tc(){for(var t=arguments.length,o=new Array(t),n=0;n<t;n++){o[n]=arguments[n]}var r;return(r=a).join.apply(r,c(o))}export{tc as join,tr as resolve,tn as resolveWorkingPath};