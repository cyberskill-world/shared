function t(t,n){if(n==null||n>t.length)n=t.length;for(var r=0,e=new Array(n);r<n;r++)e[r]=t[r];return e}function n(t){if(Array.isArray(t))return t}function r(n){if(Array.isArray(n))return t(n)}function e(t,n,r){if(n in t){Object.defineProperty(t,n,{value:r,enumerable:true,configurable:true,writable:true})}else{t[n]=r}return t}function o(t){if(typeof Symbol!=="undefined"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function c(t,n){var r=t==null?null:typeof Symbol!=="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(r==null)return;var e=[];var o=true;var c=false;var a,i;try{for(r=r.call(t);!(o=(a=r.next()).done);o=true){e.push(a.value);if(n&&e.length===n)break}}catch(t){c=true;i=t}finally{try{if(!o&&r["return"]!=null)r["return"]()}finally{if(c)throw i}}return e}function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function s(t){for(var n=1;n<arguments.length;n++){var r=arguments[n]!=null?arguments[n]:{};var o=Object.keys(r);if(typeof Object.getOwnPropertySymbols==="function"){o=o.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))}o.forEach(function(n){e(t,n,r[n])})}return t}function I(t,r){return n(t)||c(t,r)||l(t,r)||a()}function _(t){return r(t)||o(t)||l(t)||i()}function E(t){"@swc/helpers - typeof";return t&&typeof Symbol!=="undefined"&&t.constructor===Symbol?"symbol":typeof t}function l(n,r){if(!n)return;if(typeof n==="string")return t(n,r);var e=Object.prototype.toString.call(n).slice(8,-1);if(e==="Object"&&n.constructor)e=n.constructor.name;if(e==="Map"||e==="Set")return Array.from(e);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return t(n,r)}import u from"node:process";import T from"boxen";import f from"chalk";import{exec as p}from"node:child_process";import C from"node:process";import*as O from"node:util";import S from"node-fetch";import*as d from"node:path";function m(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++){n[r]=arguments[r]}var e;return(e=d).resolve.apply(e,[v].concat(_(n)))}function A(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++){n[r]=arguments[r]}var e;return(e=d).join.apply(e,_(n))}import L from"node-persist";var N=24*60*60*1e3;var G=C.env.DEBUG==="true",y=O.promisify(p),M=f.gray,P=f.blue;function g(t){return{raw:!0,cmd:t}}function K(t,n){return(n===null||n===void 0?void 0:n.isRemote)?"".concat(tc," ").concat(R," ").concat(t):(n===null||n===void 0?void 0:n.isCurrentProject)?"".concat(tc," ").concat(tr," src/cli.ts ").concat(t):"".concat(tc," ").concat(W," ").concat(t)}function b(t,n){return typeof t=="function"?K(t(n),n):(typeof t==="undefined"?"undefined":E(t))=="object"&&(t===null||t===void 0?void 0:t.raw)===!0?t.cmd:typeof t=="string"?K(t,n):t}var v=u.env.INIT_CWD||u.cwd(),R="@cyberskill/shared",D=".cyberskill-storage",h="node_modules",w="dist",Y="package.json",j="package-lock.json",x="tsconfig.json",k=".gitignore",B=".simple-git-hooks.json",F="pnpm-lock.yaml",H=".git/hooks/",U=".git/COMMIT_EDITMSG",J=A(v,h,R,w),W="cyberskill",V="eslint",X="vitest",$="vitest",q="@commitlint/cli",z="commitlint",Q="lint-staged",Z="lint-staged",tt="tsc",tn="tsc",tr="tsx",te="git",to="pnpm",tc="pnpm exec",ta="simple-git-hooks",ti="simple-git-hooks",ts="@eslint/config-inspector",tI="eslint-config-inspector",t_="node-modules-inspector",tE="node-modules-inspector",tl={CYBERSKILL_DIRECTORY:J,WORKING_DIRECTORY:v,TS_CONFIG:m(x),GIT_IGNORE:m(k),GIT_HOOK:m(H),GIT_COMMIT_MSG:m(U),SIMPLE_GIT_HOOKS_JSON:m(B),PACKAGE_JSON:m(Y),PACKAGE_LOCK_JSON:m(j),PNPM_LOCK_YAML:m(F),NODE_MODULES:m(h),CYBERSKILL:{LINT_STAGED_CONFIG:m("".concat(J,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:m("".concat(J,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:m("".concat(J,"/configs/vitest/react/unit.js")),E2E_TEST_CONFIG:m("".concat(J,"/configs/vitest/react/e2e.js"))}};function tu(t){var n=t.isCurrentProject;return s({"pre-commit":Z,"commit-msg":z},n&&{"pre-push":g("".concat(te," pull"))})}function tT(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),e=1;e<n;e++){r[e-1]=arguments[e]}var o=I(r,2),c=o[0],a=o[1];switch(t){case"pnpmAddAndExec":return b(g("".concat(to," add -D ").concat(c," && ").concat(tc," ").concat(a)));case"pnpmExec":return b(g("".concat(tc," ").concat(c," ").concat(a||"").trim()));case"raw":return b(g(c))}}var tf={SIMPLE_GIT_HOOKS:tT("pnpmAddAndExec",ta,ti),ESLINT_INSPECT:tT("pnpmAddAndExec",ts,tI),NODE_MODULES_INSPECT:tT("pnpmAddAndExec",t_,tE),ESLINT_CHECK:tT("pnpmExec",V,tl.WORKING_DIRECTORY),ESLINT_FIX:tT("pnpmExec",V,"".concat(tl.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:tT("pnpmAddAndExec",tt,"".concat(tn," -p ").concat(tl.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:tT("raw","".concat(te," config core.hooksPath ").concat(tl.GIT_HOOK)),BUILD:tT("raw","".concat(to," run build")),STAGE_BUILD_DIRECTORY:tT("raw","".concat(te," add ").concat(w)),PNPM_INSTALL_STANDARD:tT("raw","".concat(to," install")),PNPM_INSTALL_LEGACY:tT("raw","".concat(to," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:tT("raw","".concat(to," install --force")),CYBERSKILL:{TEST_UNIT:tT("pnpmAddAndExec",X,"".concat($," --config ").concat(tl.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:tT("pnpmAddAndExec",X,"".concat($," --config ").concat(tl.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:tT("pnpmAddAndExec",q,"".concat(z," --edit ").concat(tl.GIT_COMMIT_MSG," --config ").concat(tl.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:tT("pnpmAddAndExec",Q,"".concat(Z," --config ").concat(tl.CYBERSKILL.LINT_STAGED_CONFIG))}};export{w as BUILD_DIRECTORY,tf as COMMAND,z as COMMIT_LINT_CLI,q as COMMIT_LINT_PACKAGE_NAME,W as CYBERSKILL_CLI,J as CYBERSKILL_DIRECTORY,R as CYBERSKILL_PACKAGE_NAME,D as CYBERSKILL_STORAGE,V as ESLINT_CLI,tI as ESLINT_INSPECT_CLI,ts as ESLINT_INSPECT_PACKAGE_NAME,te as GIT_CLI,U as GIT_COMMIT_EDITMSG,H as GIT_HOOK,k as GIT_IGNORE,tu as HOOK,Z as LINT_STAGED_CLI,Q as LINT_STAGED_PACKAGE_NAME,h as NODE_MODULES,tE as NODE_MODULES_INSPECT_CLI,t_ as NODE_MODULES_INSPECT_PACKAGE_NAME,Y as PACKAGE_JSON,j as PACKAGE_LOCK_JSON,tl as PATH,to as PNPM_CLI,tc as PNPM_EXEC_CLI,F as PNPM_LOCK_YAML,ta as SIMPLE_GIT_HOOKS_PACKAGE_NAME,ti as SIMPLE_GIT_HOOK_CLI,B as SIMPLE_GIT_HOOK_JSON,x as TSCONFIG_JSON,tn as TSC_CLI,tt as TSC_PACKAGE_NAME,tr as TSX_CLI,$ as VITEST_CLI,X as VITEST_PACKAGE_NAME,v as WORKING_DIRECTORY};