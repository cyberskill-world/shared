function t(t,n){if(n==null||n>t.length)n=t.length;for(var r=0,o=new Array(n);r<n;r++)o[r]=t[r];return o}function n(t){if(Array.isArray(t))return t}function r(n){if(Array.isArray(n))return t(n)}function o(t,n,r){if(n in t){Object.defineProperty(t,n,{value:r,enumerable:true,configurable:true,writable:true})}else{t[n]=r}return t}function e(t){if(typeof Symbol!=="undefined"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function c(t,n){var r=t==null?null:typeof Symbol!=="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(r==null)return;var o=[];var e=true;var c=false;var a,i;try{for(r=r.call(t);!(e=(a=r.next()).done);e=true){o.push(a.value);if(n&&o.length===n)break}}catch(t){c=true;i=t}finally{try{if(!e&&r["return"]!=null)r["return"]()}finally{if(c)throw i}}return o}function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _(t){for(var n=1;n<arguments.length;n++){var r=arguments[n]!=null?arguments[n]:{};var e=Object.keys(r);if(typeof Object.getOwnPropertySymbols==="function"){e=e.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))}e.forEach(function(n){o(t,n,r[n])})}return t}function s(t,r){return n(t)||c(t,r)||l(t,r)||a()}function E(t){return r(t)||e(t)||l(t)||i()}function I(t){"@swc/helpers - typeof";return t&&typeof Symbol!=="undefined"&&t.constructor===Symbol?"symbol":typeof t}function l(n,r){if(!n)return;if(typeof n==="string")return t(n,r);var o=Object.prototype.toString.call(n).slice(8,-1);if(o==="Object"&&n.constructor)o=n.constructor.name;if(o==="Map"||o==="Set")return Array.from(o);if(o==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return t(n,r)}import C from"node:process";import u from"boxen";import T from"chalk";import{exec as N}from"node:child_process";import f from"node:process";import*as O from"node:util";import S from"node-fetch";import*as A from"node:path";function L(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++){n[r]=arguments[r]}var o;return(o=A).resolve.apply(o,[K].concat(E(n)))}function P(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++){n[r]=arguments[r]}var o;return(o=A).join.apply(o,E(n))}import p from"node-persist";var m=24*60*60*1e3;var M=f.env.DEBUG==="true",D=O.promisify(N),G=T.gray,y=T.blue;function d(t){return{raw:!0,cmd:t}}function R(t,n){return(n===null||n===void 0?void 0:n.isRemote)?"".concat(tc," ").concat(v," ").concat(t):(n===null||n===void 0?void 0:n.isCurrentProject)?"".concat(tc," ").concat(tr," src/cli.ts ").concat(t):"".concat(tc," ").concat(x," ").concat(t)}function g(t,n){return typeof t=="function"?R(t(n),n):(typeof t==="undefined"?"undefined":I(t))=="object"&&(t===null||t===void 0?void 0:t.raw)===!0?t.cmd:typeof t=="string"?R(t,n):t}var K=C.env.INIT_CWD||C.cwd(),v="@cyberskill/shared",b=".cyberskill-storage",h="node_modules",Y="dist",j="package.json",w="package-lock.json",U="tsconfig.json",k=".gitignore",B=".simple-git-hooks.json",F="pnpm-lock.yaml",X=".git/hooks/",H=".git/COMMIT_EDITMSG",W=P(K,h,v,Y),x="cyberskill",J="eslint",V="vitest",$="vitest",q="@commitlint/cli",z="commitlint",Q="lint-staged",Z="lint-staged",tt="typescript",tn="tsc",tr="tsx",to="git",te="pnpm",tc="pnpm exec",ta="simple-git-hooks",ti="simple-git-hooks",t_="@eslint/config-inspector",ts="eslint-config-inspector",tE="node-modules-inspector",tI="node-modules-inspector",tl={CYBERSKILL_DIRECTORY:W,WORKING_DIRECTORY:K,TS_CONFIG:L(U),GIT_IGNORE:L(k),GIT_HOOK:L(X),GIT_COMMIT_MSG:L(H),SIMPLE_GIT_HOOKS_JSON:L(B),PACKAGE_JSON:L(j),PACKAGE_LOCK_JSON:L(w),PNPM_LOCK_YAML:L(F),NODE_MODULES:L(h),CYBERSKILL:{LINT_STAGED_CONFIG:L("".concat(W,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:L("".concat(W,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:L("".concat(W,"/configs/vitest/react/unit.js")),UNIT_TEST_SETUP_CONFIG:L("".concat(W,"/configs/vitest/react/unit.setup.js")),E2E_TEST_CONFIG:L("".concat(W,"/configs/vitest/react/e2e.js"))}};function tC(t){var n=t.isCurrentProject;return _({"pre-commit":Z,"commit-msg":z},n&&{"pre-push":d("".concat(to," pull"))})}function tu(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++){r[o-1]=arguments[o]}var e=s(r,2),c=e[0],a=e[1];switch(t){case"PNPM_ADD_AND_EXEC":return g(d("".concat(te," add -D ").concat(c," && ").concat(tc," ").concat(a)));case"PNPM_EXEC":return g(d("".concat(tc," ").concat(c," ").concat(a||"").trim()));case"RAW":return g(d(c))}}var tT={SIMPLE_GIT_HOOKS:tu("PNPM_ADD_AND_EXEC",ta,ti),ESLINT_INSPECT:tu("PNPM_ADD_AND_EXEC",t_,ts),NODE_MODULES_INSPECT:tu("PNPM_ADD_AND_EXEC",tE,tI),ESLINT_CHECK:tu("PNPM_EXEC",J,tl.WORKING_DIRECTORY),ESLINT_FIX:tu("PNPM_EXEC",J,"".concat(tl.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:tu("PNPM_ADD_AND_EXEC",tt,"".concat(tn," -p ").concat(tl.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:tu("RAW","".concat(to," config core.hooksPath ").concat(tl.GIT_HOOK)),BUILD:tu("RAW","".concat(te," run build")),STAGE_BUILD_DIRECTORY:tu("RAW","".concat(to," add ").concat(Y)),PNPM_INSTALL_STANDARD:tu("RAW","".concat(te," install")),PNPM_INSTALL_LEGACY:tu("RAW","".concat(te," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:tu("RAW","".concat(te," install --force")),CYBERSKILL:{TEST_UNIT:tu("PNPM_ADD_AND_EXEC",V,"".concat($," --config ").concat(tl.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:tu("PNPM_ADD_AND_EXEC",V,"".concat($," --config ").concat(tl.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:tu("PNPM_ADD_AND_EXEC",q,"".concat(z," --edit ").concat(tl.GIT_COMMIT_MSG," --config ").concat(tl.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:tu("PNPM_ADD_AND_EXEC",Q,"".concat(Z," --config ").concat(tl.CYBERSKILL.LINT_STAGED_CONFIG))}};export{Y as BUILD_DIRECTORY,tT as COMMAND,z as COMMIT_LINT_CLI,q as COMMIT_LINT_PACKAGE_NAME,x as CYBERSKILL_CLI,W as CYBERSKILL_DIRECTORY,v as CYBERSKILL_PACKAGE_NAME,b as CYBERSKILL_STORAGE,J as ESLINT_CLI,ts as ESLINT_INSPECT_CLI,t_ as ESLINT_INSPECT_PACKAGE_NAME,to as GIT_CLI,H as GIT_COMMIT_EDITMSG,X as GIT_HOOK,k as GIT_IGNORE,tC as HOOK,Z as LINT_STAGED_CLI,Q as LINT_STAGED_PACKAGE_NAME,h as NODE_MODULES,tI as NODE_MODULES_INSPECT_CLI,tE as NODE_MODULES_INSPECT_PACKAGE_NAME,j as PACKAGE_JSON,w as PACKAGE_LOCK_JSON,tl as PATH,te as PNPM_CLI,tc as PNPM_EXEC_CLI,F as PNPM_LOCK_YAML,ta as SIMPLE_GIT_HOOKS_PACKAGE_NAME,ti as SIMPLE_GIT_HOOK_CLI,B as SIMPLE_GIT_HOOK_JSON,U as TSCONFIG_JSON,tn as TSC_CLI,tt as TSC_PACKAGE_NAME,tr as TSX_CLI,$ as VITEST_CLI,V as VITEST_PACKAGE_NAME,K as WORKING_DIRECTORY};