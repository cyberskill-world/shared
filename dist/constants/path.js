function t(t,n){if(n==null||n>t.length)n=t.length;for(var o=0,r=new Array(n);o<n;o++)r[o]=t[o];return r}function n(n){if(Array.isArray(n))return t(n)}function o(t,n,o){if(n in t){Object.defineProperty(t,n,{value:o,enumerable:true,configurable:true,writable:true})}else{t[n]=o}return t}function r(t){if(typeof Symbol!=="undefined"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function e(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function c(t){for(var n=1;n<arguments.length;n++){var r=arguments[n]!=null?arguments[n]:{};var e=Object.keys(r);if(typeof Object.getOwnPropertySymbols==="function"){e=e.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))}e.forEach(function(n){o(t,n,r[n])})}return t}function a(t){return n(t)||r(t)||_(t)||e()}function _(n,o){if(!n)return;if(typeof n==="string")return t(n,o);var r=Object.prototype.toString.call(n).slice(8,-1);if(r==="Object"&&n.constructor)r=n.constructor.name;if(r==="Map"||r==="Set")return Array.from(r);if(r==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return t(n,o)}import i from"node:process";import s from"boxen";import I from"chalk";import{exec as E}from"node:child_process";import T from"node:process";import*as C from"node:util";import O from"node-fetch";import*as S from"node:path";function L(){for(var t=arguments.length,n=new Array(t),o=0;o<t;o++){n[o]=arguments[o]}var r;return(r=S).resolve.apply(r,[M].concat(a(n)))}function l(){for(var t=arguments.length,n=new Array(t),o=0;o<t;o++){n[o]=arguments[o]}var r;return(r=S).join.apply(r,a(n))}import N from"node-persist";var f=24*60*60*1e3;var u=T.env.DEBUG==="true",G=C.promisify(E),m=I.gray,A=I.blue;function p(t){return{raw:!0,cmd:t}}var M=i.env.INIT_CWD||i.cwd(),P="@cyberskill/shared",K=".cyberskill-storage",g="node_modules",R="dist",d="package.json",D="package-lock.json",y="tsconfig.json",b=".gitignore",v=".simple-git-hooks.json",Y="pnpm-lock.yaml",h=".git/hooks/",j=".git/COMMIT_EDITMSG",B=l(M,g,P,R),k="cyberskill",F="eslint",U="vitest",H="vitest",w="@commitlint/cli",J="commitlint",x="lint-staged",W="lint-staged",X="tsc",V="tsc",q="tsx",$="git",z="pnpm",Q="pnpm exec",Z="simple-git-hooks",tt="simple-git-hooks",tn="@eslint/config-inspector",to="eslint-config-inspector",tr="node-modules-inspector",te="node-modules-inspector",tc={CYBERSKILL_DIRECTORY:B,WORKING_DIRECTORY:M,TS_CONFIG:L(y),GIT_IGNORE:L(b),GIT_HOOK:L(h),GIT_COMMIT_MSG:L(j),SIMPLE_GIT_HOOKS_JSON:L(v),PACKAGE_JSON:L(d),PACKAGE_LOCK_JSON:L(D),PNPM_LOCK_YAML:L(Y),NODE_MODULES:L(g),CYBERSKILL:{LINT_STAGED_CONFIG:L("".concat(B,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:L("".concat(B,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:L("".concat(B,"/configs/vitest/react/unit.js")),E2E_TEST_CONFIG:L("".concat(B,"/configs/vitest/react/e2e.js"))}};function ta(t){var n=t.isCurrentProject;return c({"pre-commit":W,"commit-msg":J},n&&{"pre-push":p("".concat($," pull"))})}function t_(t,n){return p("".concat(z," add -D ").concat(t," && ").concat(Q," ").concat(n))}function ti(t){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"";return p("".concat(Q," ").concat(t," ").concat(n).trim())}var ts={SIMPLE_GIT_HOOKS:t_(Z,tt),ESLINT_INSPECT:t_(tn,to),NODE_MODULES_INSPECT:t_(tr,te),ESLINT_CHECK:ti(F,tc.WORKING_DIRECTORY),ESLINT_FIX:ti(F,"".concat(tc.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:t_(X,"".concat(V," -p ").concat(tc.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:p("".concat($," config core.hooksPath ").concat(tc.GIT_HOOK)),BUILD:p("".concat(z," run build")),STAGE_BUILD_DIRECTORY:p("".concat($," add ").concat(R)),PNPM_INSTALL_STANDARD:p("".concat(z," install")),PNPM_INSTALL_LEGACY:p("".concat(z," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:p("".concat(z," install --force")),CYBERSKILL:{TEST_UNIT:t_(U,"".concat(H," --config ").concat(tc.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:t_(U,"".concat(H," --config ").concat(tc.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:t_(w,"".concat(J," --edit ").concat(tc.GIT_COMMIT_MSG," --config ").concat(tc.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:t_(x,"".concat(W," --config ").concat(tc.CYBERSKILL.LINT_STAGED_CONFIG))}};export{R as BUILD_DIRECTORY,ts as COMMAND,J as COMMIT_LINT_CLI,w as COMMIT_LINT_PACKAGE_NAME,k as CYBERSKILL_CLI,B as CYBERSKILL_DIRECTORY,P as CYBERSKILL_PACKAGE_NAME,K as CYBERSKILL_STORAGE,F as ESLINT_CLI,to as ESLINT_INSPECT_CLI,tn as ESLINT_INSPECT_PACKAGE_NAME,$ as GIT_CLI,j as GIT_COMMIT_EDITMSG,h as GIT_HOOK,b as GIT_IGNORE,ta as HOOK,W as LINT_STAGED_CLI,x as LINT_STAGED_PACKAGE_NAME,g as NODE_MODULES,te as NODE_MODULES_INSPECT_CLI,tr as NODE_MODULES_INSPECT_PACKAGE_NAME,d as PACKAGE_JSON,D as PACKAGE_LOCK_JSON,tc as PATH,z as PNPM_CLI,Q as PNPM_EXEC_CLI,Y as PNPM_LOCK_YAML,Z as SIMPLE_GIT_HOOKS_PACKAGE_NAME,tt as SIMPLE_GIT_HOOK_CLI,v as SIMPLE_GIT_HOOK_JSON,y as TSCONFIG_JSON,V as TSC_CLI,X as TSC_PACKAGE_NAME,q as TSX_CLI,H as VITEST_CLI,U as VITEST_PACKAGE_NAME,M as WORKING_DIRECTORY};