"use strict";function e(e,E){if(E==null||E>e.length)E=e.length;for(var t=0,n=new Array(E);t<E;t++)n[t]=e[t];return n}function E(e){if(Array.isArray(e))return e}function t(E){if(Array.isArray(E))return e(E)}function n(e,E,t){if(E in e){Object.defineProperty(e,E,{value:t,enumerable:true,configurable:true,writable:true})}else{e[E]=t}return e}function r(e){if(typeof Symbol!=="undefined"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function o(e,E){var t=e==null?null:typeof Symbol!=="undefined"&&e[Symbol.iterator]||e["@@iterator"];if(t==null)return;var n=[];var r=true;var o=false;var _,S;try{for(t=t.call(e);!(r=(_=t.next()).done);r=true){n.push(_.value);if(E&&n.length===E)break}}catch(e){o=true;S=e}finally{try{if(!r&&t["return"]!=null)t["return"]()}finally{if(o)throw S}}return n}function _(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function S(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(e){for(var E=1;E<arguments.length;E++){var t=arguments[E]!=null?arguments[E]:{};var r=Object.keys(t);if(typeof Object.getOwnPropertySymbols==="function"){r=r.concat(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))}r.forEach(function(E){n(e,E,t[E])})}return e}function O(e,t){return E(e)||o(e,t)||T(e,t)||_()}function I(e){return t(e)||r(e)||T(e)||S()}function c(e){"@swc/helpers - typeof";return e&&typeof Symbol!=="undefined"&&e.constructor===Symbol?"symbol":typeof e}function T(E,t){if(!E)return;if(typeof E==="string")return e(E,t);var n=Object.prototype.toString.call(E).slice(8,-1);if(n==="Object"&&E.constructor)n=E.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return e(E,t)}var A=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var M=function(e,E){for(var t in E)a(e,t,{get:E[t],enumerable:!0})},s=function(e,E,t,n){var r=true,o=false,_=undefined;if(E&&(typeof E==="undefined"?"undefined":c(E))=="object"||typeof E=="function")try{var S=function(){var r=O.value;!L.call(e,r)&&r!==t&&a(e,r,{get:function(){return E[r]},enumerable:!(n=u(E,r))||n.enumerable})};for(var i=C(E)[Symbol.iterator](),O;!(r=(O=i.next()).done);r=true)S()}catch(e){o=true;_=e}finally{try{if(!r&&i.return!=null){i.return()}}finally{if(o){throw _}}}return e};var G=function(e,E,t){return t=e!=null?A(N(e)):{},s(E||!e||!e.__esModule?a(t,"default",{value:e,enumerable:!0}):t,e)},D=function(e){return s(a({},"__esModule",{value:!0}),e)};var l={};M(l,{BUILD_DIRECTORY:function(){return z},COMMAND:function(){return eK},COMMIT_LINT_CLI:function(){return eT},COMMIT_LINT_PACKAGE_NAME:function(){return ec},CYBERSKILL_CLI:function(){return eS},CYBERSKILL_DIRECTORY:function(){return e_},CYBERSKILL_PACKAGE_NAME:function(){return J},CYBERSKILL_STORAGE:function(){return W},ESLINT_CLI:function(){return ei},ESLINT_INSPECT_CLI:function(){return eR},ESLINT_INSPECT_PACKAGE_NAME:function(){return el},GIT_CLI:function(){return eL},GIT_COMMIT_EDITMSG:function(){return eo},GIT_HOOK:function(){return er},GIT_IGNORE:function(){return eE},HOOK:function(){return ep},LINT_STAGED_CLI:function(){return ea},LINT_STAGED_PACKAGE_NAME:function(){return eA},NODE_MODULES:function(){return X},NODE_MODULES_INSPECT_CLI:function(){return eP},NODE_MODULES_INSPECT_PACKAGE_NAME:function(){return ef},PACKAGE_JSON:function(){return Z},PACKAGE_LOCK_JSON:function(){return $},PATH:function(){return ed},PNPM_CLI:function(){return eM},PNPM_EXEC_CLI:function(){return es},PNPM_LOCK_YAML:function(){return en},RESPONSE_STATUS:function(){return ey},SIMPLE_GIT_HOOKS_PACKAGE_NAME:function(){return eG},SIMPLE_GIT_HOOK_CLI:function(){return eD},SIMPLE_GIT_HOOK_JSON:function(){return et},TSCONFIG_JSON:function(){return ee},TSC_CLI:function(){return eC},TSC_PACKAGE_NAME:function(){return eu},TSX_CLI:function(){return eN},VITEST_CLI:function(){return eI},VITEST_PACKAGE_NAME:function(){return eO},WORKING_DIRECTORY:function(){return V}});module.exports=D(l);var R=G(require("process"),1);var f=G(require("boxen"),1),P=G(require("chalk"),1),d=require("child_process"),p=G(require("process"),1),m=G(require("util"),1);var K=G(require("node-fetch"),1);var y=G(require("fs"),1);var U=G(require("path"),1);function v(){for(var e=arguments.length,E=new Array(e),t=0;t<e;t++){E[t]=arguments[t]}var n;return(n=U).resolve.apply(n,[V].concat(I(E)))}function h(){for(var e=arguments.length,E=new Array(e),t=0;t<e;t++){E[t]=arguments[t]}var n;return(n=U).join.apply(n,I(E))}var g=G(require("node-persist"),1),b=G(require("os"),1),Y=G(require("process"),1);var F=24*60*60*1e3;var H=p.default.env.DEBUG==="true",w=m.promisify(d.exec),B=P.default,q=B.gray,j=B.blue;function x(e){return{raw:!0,cmd:e}}function Q(e,E){return(E===null||E===void 0?void 0:E.isRemote)?"".concat(es," ").concat(J," ").concat(e):(E===null||E===void 0?void 0:E.isCurrentProject)?"".concat(es," ").concat(eN," src/cli.ts ").concat(e):"".concat(es," ").concat(eS," ").concat(e)}function k(e,E){return typeof e=="function"?Q(e(E),E):(typeof e==="undefined"?"undefined":c(e))=="object"&&(e===null||e===void 0?void 0:e.raw)===!0?e.cmd:typeof e=="string"?Q(e,E):e}var V=R.default.env.INIT_CWD||R.default.cwd(),J="@cyberskill/shared",W=".cyberskill-storage",X="node_modules",z="dist",Z="package.json",$="package-lock.json",ee="tsconfig.json",eE=".gitignore",et=".simple-git-hooks.json",en="pnpm-lock.yaml",er=".git/hooks/",eo=".git/COMMIT_EDITMSG",e_=h(V,X,J,z),eS="cyberskill",ei="eslint",eO="vitest",eI="vitest",ec="@commitlint/cli",eT="commitlint",eA="lint-staged",ea="lint-staged",eu="tsc",eC="tsc",eN="tsx",eL="git",eM="pnpm",es="pnpm exec",eG="simple-git-hooks",eD="simple-git-hooks",el="@eslint/config-inspector",eR="eslint-config-inspector",ef="node-modules-inspector",eP="node-modules-inspector",ed={CYBERSKILL_DIRECTORY:e_,WORKING_DIRECTORY:V,TS_CONFIG:v(ee),GIT_IGNORE:v(eE),GIT_HOOK:v(er),GIT_COMMIT_MSG:v(eo),SIMPLE_GIT_HOOKS_JSON:v(et),PACKAGE_JSON:v(Z),PACKAGE_LOCK_JSON:v($),PNPM_LOCK_YAML:v(en),NODE_MODULES:v(X),CYBERSKILL:{LINT_STAGED_CONFIG:v("".concat(e_,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:v("".concat(e_,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:v("".concat(e_,"/configs/vitest/react/unit.js")),E2E_TEST_CONFIG:v("".concat(e_,"/configs/vitest/react/e2e.js"))}};function ep(e){var E=e.isCurrentProject;return i({"pre-commit":ea,"commit-msg":eT},E&&{"pre-push":x("".concat(eL," pull"))})}function em(e){for(var E=arguments.length,t=new Array(E>1?E-1:0),n=1;n<E;n++){t[n-1]=arguments[n]}var r=O(t,2),o=r[0],_=r[1];switch(e){case"pnpmAddAndExec":return k(x("".concat(eM," add -D ").concat(o," && ").concat(es," ").concat(_)));case"pnpmExec":return k(x("".concat(es," ").concat(o," ").concat(_||"").trim()));case"raw":return k(x(o))}}var eK={SIMPLE_GIT_HOOKS:em("pnpmAddAndExec",eG,eD),ESLINT_INSPECT:em("pnpmAddAndExec",el,eR),NODE_MODULES_INSPECT:em("pnpmAddAndExec",ef,eP),ESLINT_CHECK:em("pnpmExec",ei,ed.WORKING_DIRECTORY),ESLINT_FIX:em("pnpmExec",ei,"".concat(ed.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:em("pnpmAddAndExec",eu,"".concat(eC," -p ").concat(ed.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:em("raw","".concat(eL," config core.hooksPath ").concat(ed.GIT_HOOK)),BUILD:em("raw","".concat(eM," run build")),STAGE_BUILD_DIRECTORY:em("raw","".concat(eL," add ").concat(z)),PNPM_INSTALL_STANDARD:em("raw","".concat(eM," install")),PNPM_INSTALL_LEGACY:em("raw","".concat(eM," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:em("raw","".concat(eM," install --force")),CYBERSKILL:{TEST_UNIT:em("pnpmAddAndExec",eO,"".concat(eI," --config ").concat(ed.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:em("pnpmAddAndExec",eO,"".concat(eI," --config ").concat(ed.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:em("pnpmAddAndExec",ec,"".concat(eT," --edit ").concat(ed.GIT_COMMIT_MSG," --config ").concat(ed.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:em("pnpmAddAndExec",eA,"".concat(ea," --config ").concat(ed.CYBERSKILL.LINT_STAGED_CONFIG))}};var ey={GRAPHQL_PARSE_FAILED:{CODE:"GRAPHQL_PARSE_FAILED",MESSAGE:"The GraphQL operation string contains a syntax error."},GRAPHQL_VALIDATION_FAILED:{CODE:"GRAPHQL_VALIDATION_FAILED",MESSAGE:"The GraphQL operation is not valid against the server's schema."},BAD_USER_INPUT:{CODE:"BAD_USER_INPUT",MESSAGE:"The GraphQL operation includes an invalid value for a field argument."},PERSISTED_QUERY_NOT_FOUND:{CODE:"PERSISTED_QUERY_NOT_FOUND",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the query was not in the APQ cache."},PERSISTED_QUERY_NOT_SUPPORTED:{CODE:"PERSISTED_QUERY_NOT_SUPPORTED",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the server has disabled APQ."},OPERATION_RESOLUTION_FAILURE:{CODE:"OPERATION_RESOLUTION_FAILURE",MESSAGE:"The request was parsed successfully and is valid against the server's schema, but the server couldn't resolve which operation to run. This occurs when a request containing multiple named operations doesn't specify which operation to run (i.e.,operationName), or if the named operation isn't included in the request."},CONTINUE:{CODE:100,MESSAGE:"Continue"},SWITCHING_PROTOCOLS:{CODE:101,MESSAGE:"Switching Protocols"},PROCESSING:{CODE:102,MESSAGE:"Processing"},OK:{CODE:200,MESSAGE:"OK"},CREATED:{CODE:201,MESSAGE:"Created"},ACCEPTED:{CODE:202,MESSAGE:"Accepted"},NON_AUTHORITATIVE_INFORMATION:{CODE:203,MESSAGE:"Non Authoritative Information"},NO_CONTENT:{CODE:204,MESSAGE:"No Content"},RESET_CONTENT:{CODE:205,MESSAGE:"Reset Content"},PARTIAL_CONTENT:{CODE:206,MESSAGE:"Partial Content"},MULTI_STATUS:{CODE:207,MESSAGE:"Multi-Status"},MULTIPLE_CHOICES:{CODE:300,MESSAGE:"Multiple Choices"},MOVED_PERMANENTLY:{CODE:301,MESSAGE:"Moved Permanently"},MOVED_TEMPORARILY:{CODE:302,MESSAGE:"Moved Temporarily"},SEE_OTHER:{CODE:303,MESSAGE:"See Other"},NOT_MODIFIED:{CODE:304,MESSAGE:"Not Modified"},USE_PROXY:{CODE:305,MESSAGE:"Use Proxy"},TEMPORARY_REDIRECT:{CODE:307,MESSAGE:"Temporary Redirect"},PERMANENT_REDIRECT:{CODE:308,MESSAGE:"Permanent Redirect"},BAD_REQUEST:{CODE:400,MESSAGE:"Bad Request"},UNAUTHORIZED:{CODE:401,MESSAGE:"Unauthorized"},PAYMENT_REQUIRED:{CODE:402,MESSAGE:"Payment Required"},FORBIDDEN:{CODE:403,MESSAGE:"Forbidden"},NOT_FOUND:{CODE:404,MESSAGE:"Not Found"},METHOD_NOT_ALLOWED:{CODE:405,MESSAGE:"Method Not Allowed"},NOT_ACCEPTABLE:{CODE:406,MESSAGE:"Not Acceptable"},PROXY_AUTHENTICATION_REQUIRED:{CODE:407,MESSAGE:"Proxy Authentication Required"},REQUEST_TIMEOUT:{CODE:408,MESSAGE:"Request Timeout"},CONFLICT:{CODE:409,MESSAGE:"Conflict"},GONE:{CODE:410,MESSAGE:"Gone"},LENGTH_REQUIRED:{CODE:411,MESSAGE:"Length Required"},PRECONDITION_FAILED:{CODE:412,MESSAGE:"Precondition Failed"},REQUEST_TOO_LONG:{CODE:413,MESSAGE:"Request Entity Too Large"},REQUEST_URI_TOO_LONG:{CODE:414,MESSAGE:"Request-URI Too Long"},UNSUPPORTED_MEDIA_TYPE:{CODE:415,MESSAGE:"Unsupported Media Type"},REQUESTED_RANGE_NOT_SATISFIABLE:{CODE:416,MESSAGE:"Requested Range Not Satisfiable"},EXPECTATION_FAILED:{CODE:417,MESSAGE:"Expectation Failed"},IM_A_TEAPOT:{CODE:418,MESSAGE:"I'm a teapot"},INSUFFICIENT_SPACE_ON_RESOURCE:{CODE:419,MESSAGE:"Insufficient Space on Resource"},METHOD_FAILURE:{CODE:420,MESSAGE:"Method Failure"},MISDIRECTED_REQUEST:{CODE:421,MESSAGE:"Misdirected Request"},UNPROCESSABLE_ENTITY:{CODE:422,MESSAGE:"Unprocessable Entity"},LOCKED:{CODE:423,MESSAGE:"Locked"},FAILED_DEPENDENCY:{CODE:424,MESSAGE:"Failed Dependency"},PRECONDITION_REQUIRED:{CODE:428,MESSAGE:"Precondition Required"},TOO_MANY_REQUESTS:{CODE:429,MESSAGE:"Too Many Requests"},REQUEST_HEADER_FIELDS_TOO_LARGE:{CODE:431,MESSAGE:"Request Header Fields Too Large"},UNAVAILABLE_FOR_LEGAL_REASONS:{CODE:451,MESSAGE:"Unavailable For Legal Reasons"},INTERNAL_SERVER_ERROR:{CODE:500,MESSAGE:"Internal Server Error"},NOT_IMPLEMENTED:{CODE:501,MESSAGE:"Not Implemented"},BAD_GATEWAY:{CODE:502,MESSAGE:"Bad Gateway"},SERVICE_UNAVAILABLE:{CODE:503,MESSAGE:"Service Unavailable"},GATEWAY_TIMEOUT:{CODE:504,MESSAGE:"Gateway Timeout"},HTTP_VERSION_NOT_SUPPORTED:{CODE:505,MESSAGE:"HTTP Version Not Supported"},INSUFFICIENT_STORAGE:{CODE:507,MESSAGE:"Insufficient Storage"},NETWORK_AUTHENTICATION_REQUIRED:{CODE:511,MESSAGE:"Network Authentication Required"}};0&&(module.exports={BUILD_DIRECTORY:BUILD_DIRECTORY,COMMAND:COMMAND,COMMIT_LINT_CLI:COMMIT_LINT_CLI,COMMIT_LINT_PACKAGE_NAME:COMMIT_LINT_PACKAGE_NAME,CYBERSKILL_CLI:CYBERSKILL_CLI,CYBERSKILL_DIRECTORY:CYBERSKILL_DIRECTORY,CYBERSKILL_PACKAGE_NAME:CYBERSKILL_PACKAGE_NAME,CYBERSKILL_STORAGE:CYBERSKILL_STORAGE,ESLINT_CLI:ESLINT_CLI,ESLINT_INSPECT_CLI:ESLINT_INSPECT_CLI,ESLINT_INSPECT_PACKAGE_NAME:ESLINT_INSPECT_PACKAGE_NAME,GIT_CLI:GIT_CLI,GIT_COMMIT_EDITMSG:GIT_COMMIT_EDITMSG,GIT_HOOK:GIT_HOOK,GIT_IGNORE:GIT_IGNORE,HOOK:HOOK,LINT_STAGED_CLI:LINT_STAGED_CLI,LINT_STAGED_PACKAGE_NAME:LINT_STAGED_PACKAGE_NAME,NODE_MODULES:NODE_MODULES,NODE_MODULES_INSPECT_CLI:NODE_MODULES_INSPECT_CLI,NODE_MODULES_INSPECT_PACKAGE_NAME:NODE_MODULES_INSPECT_PACKAGE_NAME,PACKAGE_JSON:PACKAGE_JSON,PACKAGE_LOCK_JSON:PACKAGE_LOCK_JSON,PATH:PATH,PNPM_CLI:PNPM_CLI,PNPM_EXEC_CLI:PNPM_EXEC_CLI,PNPM_LOCK_YAML:PNPM_LOCK_YAML,RESPONSE_STATUS:RESPONSE_STATUS,SIMPLE_GIT_HOOKS_PACKAGE_NAME:SIMPLE_GIT_HOOKS_PACKAGE_NAME,SIMPLE_GIT_HOOK_CLI:SIMPLE_GIT_HOOK_CLI,SIMPLE_GIT_HOOK_JSON:SIMPLE_GIT_HOOK_JSON,TSCONFIG_JSON:TSCONFIG_JSON,TSC_CLI:TSC_CLI,TSC_PACKAGE_NAME:TSC_PACKAGE_NAME,TSX_CLI:TSX_CLI,VITEST_CLI:VITEST_CLI,VITEST_PACKAGE_NAME:VITEST_PACKAGE_NAME,WORKING_DIRECTORY:WORKING_DIRECTORY});