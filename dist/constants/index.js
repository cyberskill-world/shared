function E(E,e){if(e==null||e>E.length)e=E.length;for(var t=0,n=new Array(e);t<e;t++)n[t]=E[t];return n}function e(E){if(Array.isArray(E))return E}function t(e){if(Array.isArray(e))return E(e)}function n(E,e,t){if(e in E){Object.defineProperty(E,e,{value:t,enumerable:true,configurable:true,writable:true})}else{E[e]=t}return E}function o(E){if(typeof Symbol!=="undefined"&&E[Symbol.iterator]!=null||E["@@iterator"]!=null)return Array.from(E)}function r(E,e){var t=E==null?null:typeof Symbol!=="undefined"&&E[Symbol.iterator]||E["@@iterator"];if(t==null)return;var n=[];var o=true;var r=false;var a,S;try{for(t=t.call(E);!(o=(a=t.next()).done);o=true){n.push(a.value);if(e&&n.length===e)break}}catch(E){r=true;S=E}finally{try{if(!o&&t["return"]!=null)t["return"]()}finally{if(r)throw S}}return n}function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function S(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _(E){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};var o=Object.keys(t);if(typeof Object.getOwnPropertySymbols==="function"){o=o.concat(Object.getOwnPropertySymbols(t).filter(function(E){return Object.getOwnPropertyDescriptor(t,E).enumerable}))}o.forEach(function(e){n(E,e,t[e])})}return E}function i(E,t){return e(E)||r(E,t)||O(E,t)||a()}function c(E){return t(E)||o(E)||O(E)||S()}function A(E){"@swc/helpers - typeof";return E&&typeof Symbol!=="undefined"&&E.constructor===Symbol?"symbol":typeof E}function O(e,t){if(!e)return;if(typeof e==="string")return E(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n==="Object"&&e.constructor)n=e.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return E(e,t)}import s from"node:process";var T=(typeof window==="undefined"?"undefined":A(window))<"u",I=s.env.DEBUG==="true";var C="/graphql";import D from"node:process";import N from"boxen";import u from"chalk";import{exec as R}from"node:child_process";import*as M from"node:util";import l from"node-fetch";import*as G from"node:fs";var L=function(E){return G.existsSync(E)};import*as P from"node:path";function d(){for(var E=arguments.length,e=new Array(E),t=0;t<E;t++){e[t]=arguments[t]}var n;return(n=P).resolve.apply(n,[F].concat(c(e)))}function f(){for(var E=arguments.length,e=new Array(E),t=0;t<E;t++){e[t]=arguments[t]}var n;return(n=P).join.apply(n,c(e))}import p from"node-persist";var m=24*60*60*1e3;var U=M.promisify(R),y=u.gray,h=u.blue;function g(E){return{raw:!0,cmd:E}}function v(E,e){return(e===null||e===void 0?void 0:e.isRemote)?"".concat(EA," ").concat(K," ").concat(E):(e===null||e===void 0?void 0:e.isCurrentProject)?"".concat(EA," ").concat(E_," src/cli.ts ").concat(E):"".concat(EA," ").concat(J," ").concat(E)}function b(E,e){return typeof E=="function"?v(E(e),e):(typeof E==="undefined"?"undefined":A(E))=="object"&&(E===null||E===void 0?void 0:E.raw)===!0?E.cmd:typeof E=="string"?v(E,e):E}var F=D.env.INIT_CWD||D.cwd(),K="@cyberskill/shared",Y=".cyberskill-storage",H="node_modules",w="dist",B="package.json",Q="package-lock.json",j="tsconfig.json",q=".gitignore",V=".simple-git-hooks.json",W="pnpm-lock.yaml",X=".git/hooks/",k=".git/COMMIT_EDITMSG",x=f(F,H,K,w),J="cyberskill",z="eslint",Z="eslint",$="vitest",EE="playwright",Ee="vitest",Et="@commitlint/cli",En="commitlint",Eo="lint-staged",Er="lint-staged",Ea="typescript",ES="tsc",E_="tsx",Ei="git",Ec="pnpm",EA="pnpm exec",EO="simple-git-hooks",Es="simple-git-hooks",ET="@eslint/config-inspector",EI="eslint-config-inspector",EC="node-modules-inspector",ED="node-modules-inspector",EN={CYBERSKILL_DIRECTORY:x,WORKING_DIRECTORY:F,TS_CONFIG:d(j),GIT_IGNORE:d(q),GIT_HOOK:d(X),GIT_COMMIT_MSG:d(k),SIMPLE_GIT_HOOKS_JSON:d(V),PACKAGE_JSON:d(B),PACKAGE_LOCK_JSON:d(Q),PNPM_LOCK_YAML:d(W),NODE_MODULES:d(H),CYBERSKILL:{LINT_STAGED_CONFIG:d("".concat(x,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:d("".concat(x,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:d("".concat(x,"/configs/vitest/react/unit.js")),UNIT_TEST_SETUP_CONFIG:d("".concat(x,"/configs/vitest/react/unit.setup.js")),E2E_TEST_CONFIG:d("".concat(x,"/configs/vitest/react/e2e.js"))}};function Eu(E){var e=E.isCurrentProject;return _({"pre-commit":Er,"commit-msg":En},e&&{"pre-push":g("".concat(Ei," pull"))})}function ER(E){for(var e=arguments.length,t=new Array(e>1?e-1:0),n=1;n<e;n++){t[n-1]=arguments[n]}var o=i(t,2),r=o[0],a=o[1],S=E==="RAW"?!0:L(f(EN.NODE_MODULES,r));switch(E){case"PNPM_ADD_AND_EXEC":return b(g("".concat(S?"":"".concat(Ec," add ").concat(r," && ")).concat(EA," ").concat(a)));case"PNPM_ADD_DEV_AND_EXEC":return b(g("".concat(S?"":"".concat(Ec," add -D ").concat(r," && ")).concat(EA," ").concat(a)));case"RAW":return b(g(r))}}var EM={SIMPLE_GIT_HOOKS:ER("PNPM_ADD_DEV_AND_EXEC",EO,Es),ESLINT_INSPECT:ER("PNPM_ADD_DEV_AND_EXEC",ET,EI),NODE_MODULES_INSPECT:ER("PNPM_ADD_DEV_AND_EXEC",EC,ED),ESLINT_CHECK:ER("PNPM_ADD_DEV_AND_EXEC",z,"".concat(Z," ").concat(EN.WORKING_DIRECTORY)),ESLINT_FIX:ER("PNPM_ADD_DEV_AND_EXEC",z,"".concat(Z," ").concat(EN.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:ER("PNPM_ADD_AND_EXEC",Ea,"".concat(ES," -p ").concat(EN.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:ER("RAW","".concat(Ei," config core.hooksPath ").concat(EN.GIT_HOOK)),BUILD:ER("RAW","".concat(Ec," run build")),STAGE_BUILD_DIRECTORY:ER("RAW","".concat(Ei," add ").concat(w)),PNPM_INSTALL_STANDARD:ER("RAW","".concat(Ec," install")),PNPM_INSTALL_LEGACY:ER("RAW","".concat(Ec," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:ER("RAW","".concat(Ec," install --force")),CYBERSKILL:{TEST_UNIT:ER("PNPM_ADD_AND_EXEC",$,"".concat(Ee," --config ").concat(EN.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:ER("PNPM_ADD_AND_EXEC","".concat($," ").concat(EE),"".concat(Ee," --config ").concat(EN.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:ER("PNPM_ADD_DEV_AND_EXEC",Et,"".concat(En," --edit ").concat(EN.GIT_COMMIT_MSG," --config ").concat(EN.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:ER("PNPM_ADD_DEV_AND_EXEC",Eo,"".concat(Er," --config ").concat(EN.CYBERSKILL.LINT_STAGED_CONFIG))}};var El={GRAPHQL_PARSE_FAILED:{CODE:"GRAPHQL_PARSE_FAILED",MESSAGE:"The GraphQL operation string contains a syntax error."},GRAPHQL_VALIDATION_FAILED:{CODE:"GRAPHQL_VALIDATION_FAILED",MESSAGE:"The GraphQL operation is not valid against the server's schema."},BAD_USER_INPUT:{CODE:"BAD_USER_INPUT",MESSAGE:"The GraphQL operation includes an invalid value for a field argument."},PERSISTED_QUERY_NOT_FOUND:{CODE:"PERSISTED_QUERY_NOT_FOUND",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the query was not in the APQ cache."},PERSISTED_QUERY_NOT_SUPPORTED:{CODE:"PERSISTED_QUERY_NOT_SUPPORTED",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the server has disabled APQ."},OPERATION_RESOLUTION_FAILURE:{CODE:"OPERATION_RESOLUTION_FAILURE",MESSAGE:"The request was parsed successfully and is valid against the server's schema, but the server couldn't resolve which operation to run. This occurs when a request containing multiple named operations doesn't specify which operation to run (i.e.,operationName), or if the named operation isn't included in the request."},CONTINUE:{CODE:100,MESSAGE:"Continue"},SWITCHING_PROTOCOLS:{CODE:101,MESSAGE:"Switching Protocols"},PROCESSING:{CODE:102,MESSAGE:"Processing"},OK:{CODE:200,MESSAGE:"OK"},CREATED:{CODE:201,MESSAGE:"Created"},ACCEPTED:{CODE:202,MESSAGE:"Accepted"},NON_AUTHORITATIVE_INFORMATION:{CODE:203,MESSAGE:"Non Authoritative Information"},NO_CONTENT:{CODE:204,MESSAGE:"No Content"},RESET_CONTENT:{CODE:205,MESSAGE:"Reset Content"},PARTIAL_CONTENT:{CODE:206,MESSAGE:"Partial Content"},MULTI_STATUS:{CODE:207,MESSAGE:"Multi-Status"},MULTIPLE_CHOICES:{CODE:300,MESSAGE:"Multiple Choices"},MOVED_PERMANENTLY:{CODE:301,MESSAGE:"Moved Permanently"},MOVED_TEMPORARILY:{CODE:302,MESSAGE:"Moved Temporarily"},SEE_OTHER:{CODE:303,MESSAGE:"See Other"},NOT_MODIFIED:{CODE:304,MESSAGE:"Not Modified"},USE_PROXY:{CODE:305,MESSAGE:"Use Proxy"},TEMPORARY_REDIRECT:{CODE:307,MESSAGE:"Temporary Redirect"},PERMANENT_REDIRECT:{CODE:308,MESSAGE:"Permanent Redirect"},BAD_REQUEST:{CODE:400,MESSAGE:"Bad Request"},UNAUTHORIZED:{CODE:401,MESSAGE:"Unauthorized"},PAYMENT_REQUIRED:{CODE:402,MESSAGE:"Payment Required"},FORBIDDEN:{CODE:403,MESSAGE:"Forbidden"},NOT_FOUND:{CODE:404,MESSAGE:"Not Found"},METHOD_NOT_ALLOWED:{CODE:405,MESSAGE:"Method Not Allowed"},NOT_ACCEPTABLE:{CODE:406,MESSAGE:"Not Acceptable"},PROXY_AUTHENTICATION_REQUIRED:{CODE:407,MESSAGE:"Proxy Authentication Required"},REQUEST_TIMEOUT:{CODE:408,MESSAGE:"Request Timeout"},CONFLICT:{CODE:409,MESSAGE:"Conflict"},GONE:{CODE:410,MESSAGE:"Gone"},LENGTH_REQUIRED:{CODE:411,MESSAGE:"Length Required"},PRECONDITION_FAILED:{CODE:412,MESSAGE:"Precondition Failed"},REQUEST_TOO_LONG:{CODE:413,MESSAGE:"Request Entity Too Large"},REQUEST_URI_TOO_LONG:{CODE:414,MESSAGE:"Request-URI Too Long"},UNSUPPORTED_MEDIA_TYPE:{CODE:415,MESSAGE:"Unsupported Media Type"},REQUESTED_RANGE_NOT_SATISFIABLE:{CODE:416,MESSAGE:"Requested Range Not Satisfiable"},EXPECTATION_FAILED:{CODE:417,MESSAGE:"Expectation Failed"},IM_A_TEAPOT:{CODE:418,MESSAGE:"I'm a teapot"},INSUFFICIENT_SPACE_ON_RESOURCE:{CODE:419,MESSAGE:"Insufficient Space on Resource"},METHOD_FAILURE:{CODE:420,MESSAGE:"Method Failure"},MISDIRECTED_REQUEST:{CODE:421,MESSAGE:"Misdirected Request"},UNPROCESSABLE_ENTITY:{CODE:422,MESSAGE:"Unprocessable Entity"},LOCKED:{CODE:423,MESSAGE:"Locked"},FAILED_DEPENDENCY:{CODE:424,MESSAGE:"Failed Dependency"},PRECONDITION_REQUIRED:{CODE:428,MESSAGE:"Precondition Required"},TOO_MANY_REQUESTS:{CODE:429,MESSAGE:"Too Many Requests"},REQUEST_HEADER_FIELDS_TOO_LARGE:{CODE:431,MESSAGE:"Request Header Fields Too Large"},UNAVAILABLE_FOR_LEGAL_REASONS:{CODE:451,MESSAGE:"Unavailable For Legal Reasons"},INTERNAL_SERVER_ERROR:{CODE:500,MESSAGE:"Internal Server Error"},NOT_IMPLEMENTED:{CODE:501,MESSAGE:"Not Implemented"},BAD_GATEWAY:{CODE:502,MESSAGE:"Bad Gateway"},SERVICE_UNAVAILABLE:{CODE:503,MESSAGE:"Service Unavailable"},GATEWAY_TIMEOUT:{CODE:504,MESSAGE:"Gateway Timeout"},HTTP_VERSION_NOT_SUPPORTED:{CODE:505,MESSAGE:"HTTP Version Not Supported"},INSUFFICIENT_STORAGE:{CODE:507,MESSAGE:"Insufficient Storage"},NETWORK_AUTHENTICATION_REQUIRED:{CODE:511,MESSAGE:"Network Authentication Required"}};export{w as BUILD_DIRECTORY,EM as COMMAND,En as COMMIT_LINT_CLI,Et as COMMIT_LINT_PACKAGE_NAME,J as CYBERSKILL_CLI,x as CYBERSKILL_DIRECTORY,K as CYBERSKILL_PACKAGE_NAME,Y as CYBERSKILL_STORAGE,I as DEBUG,Z as ESLINT_CLI,EI as ESLINT_INSPECT_CLI,ET as ESLINT_INSPECT_PACKAGE_NAME,z as ESLINT_PACKAGE_NAME,Ei as GIT_CLI,k as GIT_COMMIT_EDITMSG,X as GIT_HOOK,q as GIT_IGNORE,C as GRAPHQL_URI_DEFAULT,Eu as HOOK,T as IS_BROWSER,Er as LINT_STAGED_CLI,Eo as LINT_STAGED_PACKAGE_NAME,H as NODE_MODULES,ED as NODE_MODULES_INSPECT_CLI,EC as NODE_MODULES_INSPECT_PACKAGE_NAME,B as PACKAGE_JSON,Q as PACKAGE_LOCK_JSON,EN as PATH,EE as PLAYWRIGHT_PACKAGE_NAME,Ec as PNPM_CLI,EA as PNPM_EXEC_CLI,W as PNPM_LOCK_YAML,El as RESPONSE_STATUS,EO as SIMPLE_GIT_HOOKS_PACKAGE_NAME,Es as SIMPLE_GIT_HOOK_CLI,V as SIMPLE_GIT_HOOK_JSON,j as TSCONFIG_JSON,ES as TSC_CLI,Ea as TSC_PACKAGE_NAME,E_ as TSX_CLI,Ee as VITEST_CLI,$ as VITEST_PACKAGE_NAME,F as WORKING_DIRECTORY};