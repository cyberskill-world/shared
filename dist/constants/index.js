function e(e,t){if(t==null||t>e.length)t=e.length;for(var E=0,n=new Array(t);E<t;E++)n[E]=e[E];return n}function t(e){if(Array.isArray(e))return e}function E(t){if(Array.isArray(t))return e(t)}function n(e,t,E){if(t in e){Object.defineProperty(e,t,{value:E,enumerable:true,configurable:true,writable:true})}else{e[t]=E}return e}function o(e){if(typeof Symbol!=="undefined"&&e[Symbol.iterator]!=null||e["@@iterator"]!=null)return Array.from(e)}function r(e,t){var E=e==null?null:typeof Symbol!=="undefined"&&e[Symbol.iterator]||e["@@iterator"];if(E==null)return;var n=[];var o=true;var r=false;var a,i;try{for(E=E.call(e);!(o=(a=E.next()).done);o=true){n.push(a.value);if(t&&n.length===t)break}}catch(e){r=true;i=e}finally{try{if(!o&&E["return"]!=null)E["return"]()}finally{if(r)throw i}}return n}function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function c(e){for(var t=1;t<arguments.length;t++){var E=arguments[t]!=null?arguments[t]:{};var o=Object.keys(E);if(typeof Object.getOwnPropertySymbols==="function"){o=o.concat(Object.getOwnPropertySymbols(E).filter(function(e){return Object.getOwnPropertyDescriptor(E,e).enumerable}))}o.forEach(function(t){n(e,t,E[t])})}return e}function S(e,E){return t(e)||r(e,E)||A(e,E)||a()}function s(e){return E(e)||o(e)||A(e)||i()}function _(e){"@swc/helpers - typeof";return e&&typeof Symbol!=="undefined"&&e.constructor===Symbol?"symbol":typeof e}function A(t,E){if(!t)return;if(typeof t==="string")return e(t,E);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor)n=t.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return e(t,E)}var O={lint:"Check code for linting issues","lint:fix":"Fix linting issues automatically","lint:inspect":"View active ESLint configuration","lint-staged":"Run lint checks on staged files",commitlint:"Validate commit message format",setup:"Initialize project setup and dependencies",reset:"Reset the project and reinstall dependencies",inspect:"Analyze installed project dependencies","test:unit":"Run unit test suite","test:e2e":"Run end-to-end test suite"};import T from"node:process";var I=T.env.DEBUG==="true";var C=(typeof window==="undefined"?"undefined":_(window))<"u";var l="/graphql";var D={isCurrentProject:!1,installedPath:"",file:{},isUpToDate:!1};import N from"node:process";import{exec as u}from"node:child_process";import*as R from"node:util";import M from"chalk";import G from"consola";import{GraphQLError as d}from"graphql";var P={GRAPHQL_PARSE_FAILED:{CODE:"GRAPHQL_PARSE_FAILED",MESSAGE:"The GraphQL operation string contains a syntax error."},GRAPHQL_VALIDATION_FAILED:{CODE:"GRAPHQL_VALIDATION_FAILED",MESSAGE:"The GraphQL operation is not valid against the server's schema."},BAD_USER_INPUT:{CODE:"BAD_USER_INPUT",MESSAGE:"The GraphQL operation includes an invalid value for a field argument."},PERSISTED_QUERY_NOT_FOUND:{CODE:"PERSISTED_QUERY_NOT_FOUND",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the query was not in the APQ cache."},PERSISTED_QUERY_NOT_SUPPORTED:{CODE:"PERSISTED_QUERY_NOT_SUPPORTED",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the server has disabled APQ."},OPERATION_RESOLUTION_FAILURE:{CODE:"OPERATION_RESOLUTION_FAILURE",MESSAGE:"The request was parsed successfully and is valid against the server's schema, but the server couldn't resolve which operation to run. This occurs when a request containing multiple named operations doesn't specify which operation to run (i.e.,operationName), or if the named operation isn't included in the request."},CONTINUE:{CODE:100,MESSAGE:"Continue"},SWITCHING_PROTOCOLS:{CODE:101,MESSAGE:"Switching Protocols"},PROCESSING:{CODE:102,MESSAGE:"Processing"},OK:{CODE:200,MESSAGE:"OK"},CREATED:{CODE:201,MESSAGE:"Created"},ACCEPTED:{CODE:202,MESSAGE:"Accepted"},NON_AUTHORITATIVE_INFORMATION:{CODE:203,MESSAGE:"Non Authoritative Information"},NO_CONTENT:{CODE:204,MESSAGE:"No Content"},RESET_CONTENT:{CODE:205,MESSAGE:"Reset Content"},PARTIAL_CONTENT:{CODE:206,MESSAGE:"Partial Content"},MULTI_STATUS:{CODE:207,MESSAGE:"Multi-Status"},MULTIPLE_CHOICES:{CODE:300,MESSAGE:"Multiple Choices"},MOVED_PERMANENTLY:{CODE:301,MESSAGE:"Moved Permanently"},MOVED_TEMPORARILY:{CODE:302,MESSAGE:"Moved Temporarily"},SEE_OTHER:{CODE:303,MESSAGE:"See Other"},NOT_MODIFIED:{CODE:304,MESSAGE:"Not Modified"},USE_PROXY:{CODE:305,MESSAGE:"Use Proxy"},TEMPORARY_REDIRECT:{CODE:307,MESSAGE:"Temporary Redirect"},PERMANENT_REDIRECT:{CODE:308,MESSAGE:"Permanent Redirect"},BAD_REQUEST:{CODE:400,MESSAGE:"Bad Request"},UNAUTHORIZED:{CODE:401,MESSAGE:"Unauthorized"},PAYMENT_REQUIRED:{CODE:402,MESSAGE:"Payment Required"},FORBIDDEN:{CODE:403,MESSAGE:"Forbidden"},NOT_FOUND:{CODE:404,MESSAGE:"Not Found"},METHOD_NOT_ALLOWED:{CODE:405,MESSAGE:"Method Not Allowed"},NOT_ACCEPTABLE:{CODE:406,MESSAGE:"Not Acceptable"},PROXY_AUTHENTICATION_REQUIRED:{CODE:407,MESSAGE:"Proxy Authentication Required"},REQUEST_TIMEOUT:{CODE:408,MESSAGE:"Request Timeout"},CONFLICT:{CODE:409,MESSAGE:"Conflict"},GONE:{CODE:410,MESSAGE:"Gone"},LENGTH_REQUIRED:{CODE:411,MESSAGE:"Length Required"},PRECONDITION_FAILED:{CODE:412,MESSAGE:"Precondition Failed"},REQUEST_TOO_LONG:{CODE:413,MESSAGE:"Request Entity Too Large"},REQUEST_URI_TOO_LONG:{CODE:414,MESSAGE:"Request-URI Too Long"},UNSUPPORTED_MEDIA_TYPE:{CODE:415,MESSAGE:"Unsupported Media Type"},REQUESTED_RANGE_NOT_SATISFIABLE:{CODE:416,MESSAGE:"Requested Range Not Satisfiable"},EXPECTATION_FAILED:{CODE:417,MESSAGE:"Expectation Failed"},IM_A_TEAPOT:{CODE:418,MESSAGE:"I'm a teapot"},INSUFFICIENT_SPACE_ON_RESOURCE:{CODE:419,MESSAGE:"Insufficient Space on Resource"},METHOD_FAILURE:{CODE:420,MESSAGE:"Method Failure"},MISDIRECTED_REQUEST:{CODE:421,MESSAGE:"Misdirected Request"},UNPROCESSABLE_ENTITY:{CODE:422,MESSAGE:"Unprocessable Entity"},LOCKED:{CODE:423,MESSAGE:"Locked"},FAILED_DEPENDENCY:{CODE:424,MESSAGE:"Failed Dependency"},PRECONDITION_REQUIRED:{CODE:428,MESSAGE:"Precondition Required"},TOO_MANY_REQUESTS:{CODE:429,MESSAGE:"Too Many Requests"},REQUEST_HEADER_FIELDS_TOO_LARGE:{CODE:431,MESSAGE:"Request Header Fields Too Large"},UNAVAILABLE_FOR_LEGAL_REASONS:{CODE:451,MESSAGE:"Unavailable For Legal Reasons"},INTERNAL_SERVER_ERROR:{CODE:500,MESSAGE:"Internal Server Error"},NOT_IMPLEMENTED:{CODE:501,MESSAGE:"Not Implemented"},BAD_GATEWAY:{CODE:502,MESSAGE:"Bad Gateway"},SERVICE_UNAVAILABLE:{CODE:503,MESSAGE:"Service Unavailable"},GATEWAY_TIMEOUT:{CODE:504,MESSAGE:"Gateway Timeout"},HTTP_VERSION_NOT_SUPPORTED:{CODE:505,MESSAGE:"HTTP Version Not Supported"},INSUFFICIENT_STORAGE:{CODE:507,MESSAGE:"Insufficient Storage"},NETWORK_AUTHENTICATION_REQUIRED:{CODE:511,MESSAGE:"Network Authentication Required"}};I||(G.level=4);function L(e){var t=M[e];return typeof t=="function"?t:M.green}var f={silent:G.silent,level:G.level,fatal:G.fatal,error:G.error,warn:G.warn,log:G.log,info:G.info,success:G.success,ready:G.ready,start:G.start,box:G.box,debug:G.debug,trace:G.trace,verbose:G.verbose,printBoxedLog:function e(e,t){var E=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"red";if(!(t===null||t===void 0?void 0:t.length)){G.box(M.green(e));return}t.forEach(function(e){var t=e.file,n=e.position,o=e.rule,r=e.message;G.log("".concat(M.gray("File:")," ").concat(M.blue("".concat(t).concat(n?":".concat(n):"")))),o&&G.log("   ".concat(L(E)("Rule:")," ").concat(o)),G.log("   ".concat(L(E)("Message:")," ").concat(r))}),G.box(L(E)("".concat(e," : ").concat(t.length))),G.log(M.gray("â”€".repeat(40)))}};import p from"node-fetch";import*as m from"node:fs";function g(){for(var e=arguments.length,t=new Array(e),E=0;E<e;E++){t[E]=arguments[E]}return t.every(function(e){return m.existsSync(e)})}import*as y from"node:path";function h(){for(var e=arguments.length,t=new Array(e),E=0;E<e;E++){t[E]=arguments[E]}var n;return(n=y).resolve.apply(n,[w].concat(s(t)))}function U(){for(var e=arguments.length,t=new Array(e),E=0;E<e;E++){t[E]=arguments[E]}var n;return(n=y).join.apply(n,s(t))}import v from"node-persist";var b=R.promisify(u);function K(e){return{raw:!0,cmd:e}}function F(e,t){return(t===null||t===void 0?void 0:t.isRemote)?"".concat(eT," ").concat(H," ").concat(e):(t===null||t===void 0?void 0:t.isCurrentProject)?"".concat(eT," ").concat(e_," src/cli.ts ").concat(e):"".concat(eT," ").concat($," ").concat(e)}function Y(e,t){return typeof e=="function"?F(e(t),t):(typeof e==="undefined"?"undefined":_(e))=="object"&&(e===null||e===void 0?void 0:e.raw)===!0?e.cmd:typeof e=="string"?F(e,t):e}var w=N.env.INIT_CWD||N.cwd(),H="@cyberskill/shared",B=".cyberskill-storage",Q="node_modules",j="dist",q="package.json",V="package-lock.json",k="tsconfig.json",x=".gitignore",W=".simple-git-hooks.json",X="pnpm-lock.yaml",J=".git/hooks/",z=".git/COMMIT_EDITMSG",Z=U(w,Q,H,j),$="cyberskill",ee="eslint",et="eslint",eE="vitest",en="playwright",eo="vitest",er="@commitlint/cli",ea="commitlint",ei="lint-staged",ec="lint-staged",eS="typescript",es="tsc",e_="tsx",eA="git",eO="pnpm",eT="pnpm exec",eI="simple-git-hooks",eC="simple-git-hooks",el="@eslint/config-inspector",eD="eslint-config-inspector",eN="node-modules-inspector",eu="node-modules-inspector",eR={CYBERSKILL_DIRECTORY:Z,WORKING_DIRECTORY:w,TS_CONFIG:h(k),GIT_IGNORE:h(x),GIT_HOOK:h(J),GIT_COMMIT_MSG:h(z),SIMPLE_GIT_HOOKS_JSON:h(W),PACKAGE_JSON:h(q),PACKAGE_LOCK_JSON:h(V),PNPM_LOCK_YAML:h(X),NODE_MODULES:h(Q),CYBERSKILL:{LINT_STAGED_CONFIG:h("".concat(Z,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:h("".concat(Z,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:h("".concat(Z,"/configs/vitest/react/unit.js")),UNIT_TEST_SETUP_CONFIG:h("".concat(Z,"/configs/vitest/react/unit.setup.js")),E2E_TEST_CONFIG:h("".concat(Z,"/configs/vitest/react/e2e.js"))}};function eM(e){var t=e.isCurrentProject;return c({"pre-commit":ec,"commit-msg":ea},t&&{"pre-push":K("".concat(eA," pull"))})}function eG(e){for(var t=arguments.length,E=new Array(t>1?t-1:0),n=1;n<t;n++){E[n-1]=arguments[n]}var o=S(E,2),r=o[0],a=o[1],i=e==="RAW"?!0:g.apply(void 0,s(r.split(" ").map(function(e){return U(eR.NODE_MODULES,e)})));switch(e){case"PNPM_ADD_AND_EXEC":return Y(K("".concat(i?"":"".concat(eO," add ").concat(r," && ")).concat(eT," ").concat(a)));case"PNPM_ADD_DEV_AND_EXEC":return Y(K("".concat(i?"":"".concat(eO," add -D ").concat(r," && ")).concat(eT," ").concat(a)));case"RAW":return Y(K(r))}}var ed={SIMPLE_GIT_HOOKS:eG("PNPM_ADD_DEV_AND_EXEC",eI,eC),ESLINT_INSPECT:eG("PNPM_ADD_DEV_AND_EXEC",el,eD),NODE_MODULES_INSPECT:eG("PNPM_ADD_DEV_AND_EXEC",eN,eu),ESLINT_CHECK:eG("PNPM_ADD_DEV_AND_EXEC",ee,"".concat(et," ").concat(eR.WORKING_DIRECTORY)),ESLINT_FIX:eG("PNPM_ADD_DEV_AND_EXEC",ee,"".concat(et," ").concat(eR.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:eG("PNPM_ADD_AND_EXEC",eS,"".concat(es," -p ").concat(eR.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:eG("RAW","".concat(eA," config core.hooksPath ").concat(eR.GIT_HOOK)),BUILD:eG("RAW","".concat(eO," run build")),STAGE_BUILD_DIRECTORY:eG("RAW","".concat(eA," add ").concat(j)),PNPM_INSTALL_STANDARD:eG("RAW","".concat(eO," install")),PNPM_INSTALL_LEGACY:eG("RAW","".concat(eO," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:eG("RAW","".concat(eO," install --force")),CYBERSKILL:{TEST_UNIT:eG("PNPM_ADD_AND_EXEC",eE,"".concat(eo," --config ").concat(eR.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:eG("PNPM_ADD_AND_EXEC","".concat(eE," ").concat(en),"".concat(eo," --config ").concat(eR.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:eG("PNPM_ADD_DEV_AND_EXEC",er,"".concat(ea," --edit ").concat(eR.GIT_COMMIT_MSG," --config ").concat(eR.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:eG("PNPM_ADD_DEV_AND_EXEC",ei,"".concat(ec," --config ").concat(eR.CYBERSKILL.LINT_STAGED_CONFIG))}};export{j as BUILD_DIRECTORY,D as CHECK_PACKAGE_EMPTY_RESULT,ed as COMMAND,O as COMMAND_DESCRIPTIONS,ea as COMMIT_LINT_CLI,er as COMMIT_LINT_PACKAGE_NAME,$ as CYBERSKILL_CLI,Z as CYBERSKILL_DIRECTORY,H as CYBERSKILL_PACKAGE_NAME,B as CYBERSKILL_STORAGE,I as DEBUG,et as ESLINT_CLI,eD as ESLINT_INSPECT_CLI,el as ESLINT_INSPECT_PACKAGE_NAME,ee as ESLINT_PACKAGE_NAME,eA as GIT_CLI,z as GIT_COMMIT_EDITMSG,J as GIT_HOOK,x as GIT_IGNORE,l as GRAPHQL_URI_DEFAULT,eM as HOOK,C as IS_BROWSER,ec as LINT_STAGED_CLI,ei as LINT_STAGED_PACKAGE_NAME,Q as NODE_MODULES,eu as NODE_MODULES_INSPECT_CLI,eN as NODE_MODULES_INSPECT_PACKAGE_NAME,q as PACKAGE_JSON,V as PACKAGE_LOCK_JSON,eR as PATH,en as PLAYWRIGHT_PACKAGE_NAME,eO as PNPM_CLI,eT as PNPM_EXEC_CLI,X as PNPM_LOCK_YAML,P as RESPONSE_STATUS,eI as SIMPLE_GIT_HOOKS_PACKAGE_NAME,eC as SIMPLE_GIT_HOOK_CLI,W as SIMPLE_GIT_HOOK_JSON,k as TSCONFIG_JSON,es as TSC_CLI,eS as TSC_PACKAGE_NAME,e_ as TSX_CLI,eo as VITEST_CLI,eE as VITEST_PACKAGE_NAME,w as WORKING_DIRECTORY};