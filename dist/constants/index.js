function E(E,e){if(e==null||e>E.length)e=E.length;for(var t=0,n=new Array(e);t<e;t++)n[t]=E[t];return n}function e(E){if(Array.isArray(E))return E}function t(e){if(Array.isArray(e))return E(e)}function n(E,e,t){if(e in E){Object.defineProperty(E,e,{value:t,enumerable:true,configurable:true,writable:true})}else{E[e]=t}return E}function o(E){if(typeof Symbol!=="undefined"&&E[Symbol.iterator]!=null||E["@@iterator"]!=null)return Array.from(E)}function r(E,e){var t=E==null?null:typeof Symbol!=="undefined"&&E[Symbol.iterator]||E["@@iterator"];if(t==null)return;var n=[];var o=true;var r=false;var a,c;try{for(t=t.call(E);!(o=(a=t.next()).done);o=true){n.push(a.value);if(e&&n.length===e)break}}catch(E){r=true;c=E}finally{try{if(!o&&t["return"]!=null)t["return"]()}finally{if(r)throw c}}return n}function a(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function c(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function i(E){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};var o=Object.keys(t);if(typeof Object.getOwnPropertySymbols==="function"){o=o.concat(Object.getOwnPropertySymbols(t).filter(function(E){return Object.getOwnPropertyDescriptor(t,E).enumerable}))}o.forEach(function(e){n(E,e,t[e])})}return E}function S(E,t){return e(E)||r(E,t)||A(E,t)||a()}function _(E){return t(E)||o(E)||A(E)||c()}function s(E){"@swc/helpers - typeof";return E&&typeof Symbol!=="undefined"&&E.constructor===Symbol?"symbol":typeof E}function A(e,t){if(!e)return;if(typeof e==="string")return E(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(n==="Object"&&e.constructor)n=e.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return E(e,t)}import O from"node:process";var T=O.env.DEBUG==="true";var I=(typeof window==="undefined"?"undefined":s(window))<"u";var C="/graphql";import D from"node:process";import{exec as N}from"node:child_process";import*as l from"node:util";import u from"chalk";import R from"consola";import{GraphQLError as M}from"graphql";var G={GRAPHQL_PARSE_FAILED:{CODE:"GRAPHQL_PARSE_FAILED",MESSAGE:"The GraphQL operation string contains a syntax error."},GRAPHQL_VALIDATION_FAILED:{CODE:"GRAPHQL_VALIDATION_FAILED",MESSAGE:"The GraphQL operation is not valid against the server's schema."},BAD_USER_INPUT:{CODE:"BAD_USER_INPUT",MESSAGE:"The GraphQL operation includes an invalid value for a field argument."},PERSISTED_QUERY_NOT_FOUND:{CODE:"PERSISTED_QUERY_NOT_FOUND",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the query was not in the APQ cache."},PERSISTED_QUERY_NOT_SUPPORTED:{CODE:"PERSISTED_QUERY_NOT_SUPPORTED",MESSAGE:"A client sent the hash of a query string to execute via automatic persisted queries, but the server has disabled APQ."},OPERATION_RESOLUTION_FAILURE:{CODE:"OPERATION_RESOLUTION_FAILURE",MESSAGE:"The request was parsed successfully and is valid against the server's schema, but the server couldn't resolve which operation to run. This occurs when a request containing multiple named operations doesn't specify which operation to run (i.e.,operationName), or if the named operation isn't included in the request."},CONTINUE:{CODE:100,MESSAGE:"Continue"},SWITCHING_PROTOCOLS:{CODE:101,MESSAGE:"Switching Protocols"},PROCESSING:{CODE:102,MESSAGE:"Processing"},OK:{CODE:200,MESSAGE:"OK"},CREATED:{CODE:201,MESSAGE:"Created"},ACCEPTED:{CODE:202,MESSAGE:"Accepted"},NON_AUTHORITATIVE_INFORMATION:{CODE:203,MESSAGE:"Non Authoritative Information"},NO_CONTENT:{CODE:204,MESSAGE:"No Content"},RESET_CONTENT:{CODE:205,MESSAGE:"Reset Content"},PARTIAL_CONTENT:{CODE:206,MESSAGE:"Partial Content"},MULTI_STATUS:{CODE:207,MESSAGE:"Multi-Status"},MULTIPLE_CHOICES:{CODE:300,MESSAGE:"Multiple Choices"},MOVED_PERMANENTLY:{CODE:301,MESSAGE:"Moved Permanently"},MOVED_TEMPORARILY:{CODE:302,MESSAGE:"Moved Temporarily"},SEE_OTHER:{CODE:303,MESSAGE:"See Other"},NOT_MODIFIED:{CODE:304,MESSAGE:"Not Modified"},USE_PROXY:{CODE:305,MESSAGE:"Use Proxy"},TEMPORARY_REDIRECT:{CODE:307,MESSAGE:"Temporary Redirect"},PERMANENT_REDIRECT:{CODE:308,MESSAGE:"Permanent Redirect"},BAD_REQUEST:{CODE:400,MESSAGE:"Bad Request"},UNAUTHORIZED:{CODE:401,MESSAGE:"Unauthorized"},PAYMENT_REQUIRED:{CODE:402,MESSAGE:"Payment Required"},FORBIDDEN:{CODE:403,MESSAGE:"Forbidden"},NOT_FOUND:{CODE:404,MESSAGE:"Not Found"},METHOD_NOT_ALLOWED:{CODE:405,MESSAGE:"Method Not Allowed"},NOT_ACCEPTABLE:{CODE:406,MESSAGE:"Not Acceptable"},PROXY_AUTHENTICATION_REQUIRED:{CODE:407,MESSAGE:"Proxy Authentication Required"},REQUEST_TIMEOUT:{CODE:408,MESSAGE:"Request Timeout"},CONFLICT:{CODE:409,MESSAGE:"Conflict"},GONE:{CODE:410,MESSAGE:"Gone"},LENGTH_REQUIRED:{CODE:411,MESSAGE:"Length Required"},PRECONDITION_FAILED:{CODE:412,MESSAGE:"Precondition Failed"},REQUEST_TOO_LONG:{CODE:413,MESSAGE:"Request Entity Too Large"},REQUEST_URI_TOO_LONG:{CODE:414,MESSAGE:"Request-URI Too Long"},UNSUPPORTED_MEDIA_TYPE:{CODE:415,MESSAGE:"Unsupported Media Type"},REQUESTED_RANGE_NOT_SATISFIABLE:{CODE:416,MESSAGE:"Requested Range Not Satisfiable"},EXPECTATION_FAILED:{CODE:417,MESSAGE:"Expectation Failed"},IM_A_TEAPOT:{CODE:418,MESSAGE:"I'm a teapot"},INSUFFICIENT_SPACE_ON_RESOURCE:{CODE:419,MESSAGE:"Insufficient Space on Resource"},METHOD_FAILURE:{CODE:420,MESSAGE:"Method Failure"},MISDIRECTED_REQUEST:{CODE:421,MESSAGE:"Misdirected Request"},UNPROCESSABLE_ENTITY:{CODE:422,MESSAGE:"Unprocessable Entity"},LOCKED:{CODE:423,MESSAGE:"Locked"},FAILED_DEPENDENCY:{CODE:424,MESSAGE:"Failed Dependency"},PRECONDITION_REQUIRED:{CODE:428,MESSAGE:"Precondition Required"},TOO_MANY_REQUESTS:{CODE:429,MESSAGE:"Too Many Requests"},REQUEST_HEADER_FIELDS_TOO_LARGE:{CODE:431,MESSAGE:"Request Header Fields Too Large"},UNAVAILABLE_FOR_LEGAL_REASONS:{CODE:451,MESSAGE:"Unavailable For Legal Reasons"},INTERNAL_SERVER_ERROR:{CODE:500,MESSAGE:"Internal Server Error"},NOT_IMPLEMENTED:{CODE:501,MESSAGE:"Not Implemented"},BAD_GATEWAY:{CODE:502,MESSAGE:"Bad Gateway"},SERVICE_UNAVAILABLE:{CODE:503,MESSAGE:"Service Unavailable"},GATEWAY_TIMEOUT:{CODE:504,MESSAGE:"Gateway Timeout"},HTTP_VERSION_NOT_SUPPORTED:{CODE:505,MESSAGE:"HTTP Version Not Supported"},INSUFFICIENT_STORAGE:{CODE:507,MESSAGE:"Insufficient Storage"},NETWORK_AUTHENTICATION_REQUIRED:{CODE:511,MESSAGE:"Network Authentication Required"}};T||(R.level=4);function L(E){var e=u[E];return typeof e=="function"?e:u.green}var P={silent:R.silent,level:R.level,fatal:R.fatal,error:R.error,warn:R.warn,log:R.log,info:R.info,success:R.success,ready:R.ready,start:R.start,box:R.box,debug:R.debug,trace:R.trace,verbose:R.verbose,printBoxedLog:function E(E,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"red";if(!(e===null||e===void 0?void 0:e.length)){R.box(u.green(E));return}e.forEach(function(E){var e=E.file,n=E.position,o=E.rule,r=E.message;R.log("".concat(u.gray("File:")," ").concat(u.blue("".concat(e).concat(n?":".concat(n):"")))),o&&R.log("   ".concat(L(t)("Rule:")," ").concat(o)),R.log("   ".concat(L(t)("Message:")," ").concat(r))}),R.box(L(t)("".concat(E," : ").concat(e.length))),R.log(u.gray("â”€".repeat(40)))}};import f from"node-fetch";import*as d from"node:fs";function p(){for(var E=arguments.length,e=new Array(E),t=0;t<E;t++){e[t]=arguments[t]}return e.every(function(E){return d.existsSync(E)})}import*as m from"node:path";function y(){for(var E=arguments.length,e=new Array(E),t=0;t<E;t++){e[t]=arguments[t]}var n;return(n=m).resolve.apply(n,[Y].concat(_(e)))}function g(){for(var E=arguments.length,e=new Array(E),t=0;t<E;t++){e[t]=arguments[t]}var n;return(n=m).join.apply(n,_(e))}import U from"node-persist";var h=24*60*60*1e3;var v=l.promisify(N);function b(E){return{raw:!0,cmd:E}}function F(E,e){return(e===null||e===void 0?void 0:e.isRemote)?"".concat(EO," ").concat(w," ").concat(E):(e===null||e===void 0?void 0:e.isCurrentProject)?"".concat(EO," ").concat(E_," src/cli.ts ").concat(E):"".concat(EO," ").concat(Z," ").concat(E)}function K(E,e){return typeof E=="function"?F(E(e),e):(typeof E==="undefined"?"undefined":s(E))=="object"&&(E===null||E===void 0?void 0:E.raw)===!0?E.cmd:typeof E=="string"?F(E,e):E}var Y=D.env.INIT_CWD||D.cwd(),w="@cyberskill/shared",H=".cyberskill-storage",B="node_modules",Q="dist",q="package.json",j="package-lock.json",V="tsconfig.json",W=".gitignore",x=".simple-git-hooks.json",X="pnpm-lock.yaml",k=".git/hooks/",J=".git/COMMIT_EDITMSG",z=g(Y,B,w,Q),Z="cyberskill",$="eslint",EE="eslint",Ee="vitest",Et="playwright",En="vitest",Eo="@commitlint/cli",Er="commitlint",Ea="lint-staged",Ec="lint-staged",Ei="typescript",ES="tsc",E_="tsx",Es="git",EA="pnpm",EO="pnpm exec",ET="simple-git-hooks",EI="simple-git-hooks",EC="@eslint/config-inspector",ED="eslint-config-inspector",EN="node-modules-inspector",El="node-modules-inspector",Eu={CYBERSKILL_DIRECTORY:z,WORKING_DIRECTORY:Y,TS_CONFIG:y(V),GIT_IGNORE:y(W),GIT_HOOK:y(k),GIT_COMMIT_MSG:y(J),SIMPLE_GIT_HOOKS_JSON:y(x),PACKAGE_JSON:y(q),PACKAGE_LOCK_JSON:y(j),PNPM_LOCK_YAML:y(X),NODE_MODULES:y(B),CYBERSKILL:{LINT_STAGED_CONFIG:y("".concat(z,"/configs/lint-staged/base.js")),COMMITLINT_CONFIG:y("".concat(z,"/configs/commitlint/base.js")),UNIT_TEST_CONFIG:y("".concat(z,"/configs/vitest/react/unit.js")),UNIT_TEST_SETUP_CONFIG:y("".concat(z,"/configs/vitest/react/unit.setup.js")),E2E_TEST_CONFIG:y("".concat(z,"/configs/vitest/react/e2e.js"))}};function ER(E){var e=E.isCurrentProject;return i({"pre-commit":Ec,"commit-msg":Er},e&&{"pre-push":b("".concat(Es," pull"))})}function EM(E){for(var e=arguments.length,t=new Array(e>1?e-1:0),n=1;n<e;n++){t[n-1]=arguments[n]}var o=S(t,2),r=o[0],a=o[1],c=E==="RAW"?!0:p.apply(void 0,_(r.split(" ").map(function(E){return g(Eu.NODE_MODULES,E)})));switch(E){case"PNPM_ADD_AND_EXEC":return K(b("".concat(c?"":"".concat(EA," add ").concat(r," && ")).concat(EO," ").concat(a)));case"PNPM_ADD_DEV_AND_EXEC":return K(b("".concat(c?"":"".concat(EA," add -D ").concat(r," && ")).concat(EO," ").concat(a)));case"RAW":return K(b(r))}}var EG={SIMPLE_GIT_HOOKS:EM("PNPM_ADD_DEV_AND_EXEC",ET,EI),ESLINT_INSPECT:EM("PNPM_ADD_DEV_AND_EXEC",EC,ED),NODE_MODULES_INSPECT:EM("PNPM_ADD_DEV_AND_EXEC",EN,El),ESLINT_CHECK:EM("PNPM_ADD_DEV_AND_EXEC",$,"".concat(EE," ").concat(Eu.WORKING_DIRECTORY)),ESLINT_FIX:EM("PNPM_ADD_DEV_AND_EXEC",$,"".concat(EE," ").concat(Eu.WORKING_DIRECTORY," --fix")),TYPESCRIPT_CHECK:EM("PNPM_ADD_AND_EXEC",Ei,"".concat(ES," -p ").concat(Eu.TS_CONFIG," --noEmit")),CONFIGURE_GIT_HOOK:EM("RAW","".concat(Es," config core.hooksPath ").concat(Eu.GIT_HOOK)),BUILD:EM("RAW","".concat(EA," run build")),STAGE_BUILD_DIRECTORY:EM("RAW","".concat(Es," add ").concat(Q)),PNPM_INSTALL_STANDARD:EM("RAW","".concat(EA," install")),PNPM_INSTALL_LEGACY:EM("RAW","".concat(EA," install --legacy-peer-deps")),PNPM_INSTALL_FORCE:EM("RAW","".concat(EA," install --force")),CYBERSKILL:{TEST_UNIT:EM("PNPM_ADD_AND_EXEC",Ee,"".concat(En," --config ").concat(Eu.CYBERSKILL.UNIT_TEST_CONFIG)),TEST_E2E:EM("PNPM_ADD_AND_EXEC","".concat(Ee," ").concat(Et),"".concat(En," --config ").concat(Eu.CYBERSKILL.E2E_TEST_CONFIG)),COMMIT_LINT:EM("PNPM_ADD_DEV_AND_EXEC",Eo,"".concat(Er," --edit ").concat(Eu.GIT_COMMIT_MSG," --config ").concat(Eu.CYBERSKILL.COMMITLINT_CONFIG)),LINT_STAGED:EM("PNPM_ADD_DEV_AND_EXEC",Ea,"".concat(Ec," --config ").concat(Eu.CYBERSKILL.LINT_STAGED_CONFIG))}};export{Q as BUILD_DIRECTORY,EG as COMMAND,Er as COMMIT_LINT_CLI,Eo as COMMIT_LINT_PACKAGE_NAME,Z as CYBERSKILL_CLI,z as CYBERSKILL_DIRECTORY,w as CYBERSKILL_PACKAGE_NAME,H as CYBERSKILL_STORAGE,T as DEBUG,EE as ESLINT_CLI,ED as ESLINT_INSPECT_CLI,EC as ESLINT_INSPECT_PACKAGE_NAME,$ as ESLINT_PACKAGE_NAME,Es as GIT_CLI,J as GIT_COMMIT_EDITMSG,k as GIT_HOOK,W as GIT_IGNORE,C as GRAPHQL_URI_DEFAULT,ER as HOOK,I as IS_BROWSER,Ec as LINT_STAGED_CLI,Ea as LINT_STAGED_PACKAGE_NAME,B as NODE_MODULES,El as NODE_MODULES_INSPECT_CLI,EN as NODE_MODULES_INSPECT_PACKAGE_NAME,q as PACKAGE_JSON,j as PACKAGE_LOCK_JSON,Eu as PATH,Et as PLAYWRIGHT_PACKAGE_NAME,EA as PNPM_CLI,EO as PNPM_EXEC_CLI,X as PNPM_LOCK_YAML,G as RESPONSE_STATUS,ET as SIMPLE_GIT_HOOKS_PACKAGE_NAME,EI as SIMPLE_GIT_HOOK_CLI,x as SIMPLE_GIT_HOOK_JSON,V as TSCONFIG_JSON,ES as TSC_CLI,Ei as TSC_PACKAGE_NAME,E_ as TSX_CLI,En as VITEST_CLI,Ee as VITEST_PACKAGE_NAME,Y as WORKING_DIRECTORY};