function r(r,t){if(t==null||t>r.length)t=r.length;for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function t(r){if(Array.isArray(r))return r}function e(t){if(Array.isArray(t))return r(t)}function n(r){if(typeof Symbol!=="undefined"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function o(r,t){var e=r==null?null:typeof Symbol!=="undefined"&&r[Symbol.iterator]||r["@@iterator"];if(e==null)return;var n=[];var o=true;var i=false;var a,f;try{for(e=e.call(r);!(o=(a=e.next()).done);o=true){n.push(a.value);if(t&&n.length===t)break}}catch(r){i=true;f=r}finally{try{if(!o&&e["return"]!=null)e["return"]()}finally{if(i)throw f}}return n}function i(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function a(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function f(r,t){if(r==null)return{};var e=u(r,t);var n,o;if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);for(o=0;o<i.length;o++){n=i[o];if(t.indexOf(n)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(r,n))continue;e[n]=r[n]}}return e}function u(r,t){if(r==null)return{};var e={};var n=Object.keys(r);var o,i;for(i=0;i<n.length;i++){o=n[i];if(t.indexOf(o)>=0)continue;e[o]=r[o]}return e}function l(r,e){return t(r)||o(r,e)||s(r,e)||i()}function m(r){return e(r)||n(r)||s(r)||a()}function c(r){"@swc/helpers - typeof";return r&&typeof Symbol!=="undefined"&&r.constructor===Symbol?"symbol":typeof r}function s(t,e){if(!t)return;if(typeof t==="string")return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor)n=t.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}import p from"@antfu/eslint-config";import y from"unorm";import{exec as d}from"node:child_process";import v from"node:process";import*as b from"node:util";import g from"boxen";import h from"chalk";import A from"localforage";import w from"node-persist";import S from"node:os";import j from"node:path";import O from"node:process";var I=O.env.CYBERSKILL_STORAGE_DIR||j.join(S.homedir(),".cyberskill-storage");var E=v.env.DEBUG==="true",k=b.promisify(d),x=h.gray,U=h.blue;function C(){for(var r=arguments.length,t=new Array(r),e=0;e<r;e++){t[e]=arguments[e]}var n=function(r,t){return Object.keys(t).forEach(function(e){var o=t[e],i=r[e];Array.isArray(o)?r[e]=m(new Set(m(Array.isArray(i)?i:[]).concat(m(o)))):(typeof o==="undefined"?"undefined":c(o))=="object"&&o!==null&&!Array.isArray(o)?r[e]=n((typeof i==="undefined"?"undefined":c(i))=="object"&&!Array.isArray(i)?i:{},o):r[e]=o}),r};return t.flatMap(function(r){return Array.isArray(r)?r:[r]}).reduce(function(r,t){return n(r,t)},{})}import{format as T}from"date-fns";import{GraphQLError as L}from"graphql";import R from"crypto-js";import _ from"mongoose-aggregate-paginate-v2";import D from"mongoose-paginate-v2";import G from"slugify";import{v4 as P}from"uuid";var q=G.default||G;import B from"node-fetch";import{dirname as M}from"node:path";import K from"node:process";import{fileURLToPath as N}from"node:url";var Q=N(import.meta.url),W=M(Q),Y=K.env.INIT_CWD||K.cwd();var $=24*60*60*1e3;var z={a:["\xe0","\xe1","ạ","ả","\xe3","\xe2","ầ","ấ","ậ","ẩ","ẫ","ă","ằ","ắ","ặ","ẳ","ẵ"],e:["\xe8","\xe9","ẹ","ẻ","ẽ","\xea","ề","ế","ệ","ể","ễ"],i:["\xec","\xed","ị","ỉ","ĩ"],o:["\xf2","\xf3","ọ","ỏ","\xf5","\xf4","ồ","ố","ộ","ổ","ỗ","ơ","ờ","ớ","ợ","ở","ỡ"],u:["\xf9","\xfa","ụ","ủ","ũ","ư","ừ","ứ","ự","ử","ữ"],y:["ỳ","\xfd","ỵ","ỷ","ỹ"],d:["đ"]},F=Object.entries(z).reduce(function(r,t){var e=l(t,2),n=e[0],o=e[1];return r[n.toUpperCase()]=o.map(function(r){return r.toUpperCase()}),r},{});var H={merge:function(){var r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"eslint";for(var t=arguments.length,e=new Array(t>1?t-1:0),n=1;n<t;n++){e[n-1]=arguments[n]}var o=function(){return C.apply(void 0,m(e))};if(r==="eslint"){var i=o(),a=i.ignores,u=f(i,["ignores"]),l=Array.isArray(a)?a.filter(function(r){return typeof r=="string"}):void 0,c=[u,l?{ignores:l}:null].filter(function(r){return!!r});return p.apply(void 0,[{stylistic:{semi:!0,indent:4,quotes:"single"},yaml:!1,react:!0,formatters:{css:!0,html:!0,markdown:"prettier"}}].concat(m(c)))}if(r==="commitlint"||r==="lint-staged")return o();throw new Error("Unknown type: ".concat(r))}};export{H as default};