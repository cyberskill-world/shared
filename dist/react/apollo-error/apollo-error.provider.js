function r(r,t){if(t==null||t>r.length)t=r.length;for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function t(r){if(Array.isArray(r))return r}function e(r,t){var e=r==null?null:typeof Symbol!=="undefined"&&r[Symbol.iterator]||r["@@iterator"];if(e==null)return;var n=[];var o=true;var a=false;var u,i;try{for(e=e.call(r);!(o=(u=e.next()).done);o=true){n.push(u.value);if(t&&n.length===t)break}}catch(r){a=true;i=r}finally{try{if(!o&&e["return"]!=null)e["return"]()}finally{if(a)throw i}}return n}function n(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function o(r,o){return t(r)||e(r,o)||a(r,o)||n()}function a(t,e){if(!t)return;if(typeof t==="string")return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);if(n==="Object"&&t.constructor)n=t.constructor.name;if(n==="Map"||n==="Set")return Array.from(n);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}import{useEffect as u,useMemo as i,useState as l}from"react";import{createContext as f}from"react";var c=f(void 0);import{jsx as s}from"react/jsx-runtime";var v=null;function m(r){v===null||v===void 0?void 0:v(r)}function y(r){var t=r.children;var e=o(l(null),2),n=e[0],a=e[1];u(function(){v=a},[]);var f=i(function(){return{error:n,showError:a,hideError:function(){return a(null)}}},[n]);return s(c,{value:f,children:t})}export{y as ApolloErrorProvider,m as showGlobalApolloError};