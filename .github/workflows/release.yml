name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # ✅ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      # ✅ Cache npm dependencies and node_modules
      - name: Cache npm dependencies and node_modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      # ✅ Cache release dependencies
      - name: Cache release dependencies
        id: cache-release-deps
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: release-deps-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            release-deps-${{ runner.os }}-

      # ✅ Configure npm authentication (cleaner)
      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      # ✅ Install release dependencies only if cache is not hit
      - name: Install semantic-release manually
        if: steps.cache-release-deps.outputs.cache-hit != 'true'
        run: |
          npm install --no-save semantic-release@24.2.3 \
            @semantic-release/changelog@6.0.2 \
            @semantic-release/git@10.0.1 \
            @semantic-release/github@11.0.1 \
            @semantic-release/npm@12.0.1 \
            @semantic-release/commit-analyzer@13.0.1 \
            @semantic-release/release-notes-generator@14.0.3

      # ✅ Run Semantic Release
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
