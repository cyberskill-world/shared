name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # âœ… Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # âœ… Set up Node.js with cache
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm' # Caches node_modules using package-lock.json

      # âœ… Restore cached build to avoid rebuilding
      - name: Restore build cache
        id: cache-build
        uses: actions/cache@v4
        with:
          path: ./dist
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*.{ts,tsx,js,jsx}') }}
          restore-keys: |
            ${{ runner.os }}-build-

      # âœ… Check if build already exists
      - name: Check for existing build
        id: check-dist
        run: |
          if [ -d "./dist" ]; then
            echo "Build already exists âœ…"
            echo "BUILD_EXISTS=true" >> $GITHUB_ENV
          else
            echo "No existing build, need to build ðŸš€"
            echo "BUILD_EXISTS=false" >> $GITHUB_ENV
          fi

      # âœ… Configure npm authentication
      - name: Configure npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "NODE_AUTH_TOKEN=${{ secrets.NPM_TOKEN }}" >> $GITHUB_ENV

      # âœ… Install dependencies (always)
      - name: Install dependencies
        run: npm ci

      # âœ… Clean up dist folder before building
      - name: Clean dist folder
        if: env.BUILD_EXISTS != 'true'
        run: npx rimraf dist

      # âœ… Build only if needed
      - name: Build
        if: env.BUILD_EXISTS != 'true'
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: npm run build

      # âœ… Release (only if build succeeded)
      - name: Release
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release

      # âœ… Save build cache (if new build happened)
      - name: Save build cache
        if: env.BUILD_EXISTS != 'true'
        uses: actions/cache@v4
        with:
          path: ./dist
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/*.{ts,tsx,js,jsx}') }}
